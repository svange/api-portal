(api-portal-py3.12) PS C:\Users\samue\projects\api-portal> sam validate --template-file cloudformation/template.yaml --lint --debug
2025-07-29 18:58:28,993 | No config file found in this directory.
2025-07-29 18:58:28,995 | OSError occurred while reading TOML file: [Errno 2] No such file or directory: 'C:\\Users\\samue\\projects\\api-portal\\cloudformation\\samconfig.toml'
2025-07-29 18:58:28,995 | Config file location: C:\Users\samue\projects\api-portal\cloudformation\samconfig.toml
2025-07-29 18:58:28,996 | Config file 'C:\Users\samue\projects\api-portal\cloudformation\samconfig.toml' does not exist
2025-07-29 18:58:29,007 | OSError occurred while reading TOML file: [Errno 2] No such file or directory: 'C:\\Users\\samue\\projects\\api-portal\\cloudformation\\samconfig.toml'
2025-07-29 18:58:29,008 | Using config file: samconfig.toml, config environment: default
2025-07-29 18:58:29,008 | Expand command line arguments to:
2025-07-29 18:58:29,008 | --template_file=C:\Users\samue\projects\api-portal\cloudformation\template.yaml --lint
2025-07-29 18:58:31 Looking for CFLINTRC before attempting to load
2025-07-29 18:58:31 Validating User CFNLINTRC
2025-07-29 18:58:31 Validating CFNLINTRC config with given JSONSchema
2025-07-29 18:58:31 Schema used: {'$id': 'https://github.com/aws-cloudformation/cfn-python-lint/blob/main/src/cfnlint/data/CfnLintCli/config/schema.json', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'CFNLINTRC configuration schema', 'properties': {'ap
pend_rules': {'description': 'Location of directories to append rules from', 'items': {'type': 'string'}, 'type': 'array'}, 'configure_rules': {'additionalProperties': False, 'description': 'Configure rules', 'patternProperties': {'^.*$': {'patternProperties': {'^.*$': {'anyOf': [{'type': 'string'}, {'type
': 'integer'}, {'type': 'boolean'}, {'items': {'type': 'string'}, 'type': 'array'}, {'items': {'type': 'integer'}, 'type': 'array'}, {'items': {'type': 'string'}, 'type': 'boolean'}]}}, 'type': 'object'}}, 'type': 'object'}, 'custom_rules': {'description': 'custom rule file to use', 'type': 'string'}, 'deb
ug': {'description': 'Debug mode', 'type': 'boolean'}, 'ignore_bad_template': {'description': 'Ignore bad templates', 'type': 'boolean'}, 'ignore_checks': {'description': 'List of checks to ignore', 'items': {'type': 'string'}, 'type': 'array'}, 'ignore_templates': {'description': 'Templates to ignore', 'i
tems': {'type': 'string'}, 'type': 'array'}, 'include_checks': {'description': 'List of checks to include', 'items': {'type': 'string'}, 'type': 'array'}, 'mandatory_checks': {'description': 'List of mandatory checks to enforce', 'items': {'type': 'string'}, 'type': 'array'}, 'merge_configs': {'description
': 'Merges lists between configuration layers', 'type': 'boolean'}, 'output_file': {'description': 'Path to the file to write the main output to', 'type': 'string'}, 'override_spec': {'description': 'Path to spec file to override with', 'type': 'string'}, 'regions': {'description': 'Regions to test against
', 'items': {'type': 'string'}, 'type': 'array'}, 'registry_schemas': {'description': 'One or more directories of CloudFormation Registry Resource Schemas', 'items': {'type': 'string'}, 'type': 'array'}, 'templates': {'description': 'Templates to lint', 'items': {'type': 'string'}, 'type': 'array'}}, 'title': 'CFNLINTRC JSON Schema', 'type': 'object'}
2025-07-29 18:58:31 Config used: {}
2025-07-29 18:58:31 CFNLINTRC looks valid!
2025-07-29 18:58:31 Parsing CFNLINTRC
2025-07-29 18:58:31 Validating Project CFNLINTRC
2025-07-29 18:58:31 Validating CFNLINTRC config with given JSONSchema
2025-07-29 18:58:31 Schema used: {'$id': 'https://github.com/aws-cloudformation/cfn-python-lint/blob/main/src/cfnlint/data/CfnLintCli/config/schema.json', '$schema': 'http://json-schema.org/draft-07/schema#', 'additionalProperties': False, 'description': 'CFNLINTRC configuration schema', 'properties': {'ap
pend_rules': {'description': 'Location of directories to append rules from', 'items': {'type': 'string'}, 'type': 'array'}, 'configure_rules': {'additionalProperties': False, 'description': 'Configure rules', 'patternProperties': {'^.*$': {'patternProperties': {'^.*$': {'anyOf': [{'type': 'string'}, {'type
': 'integer'}, {'type': 'boolean'}, {'items': {'type': 'string'}, 'type': 'array'}, {'items': {'type': 'integer'}, 'type': 'array'}, {'items': {'type': 'string'}, 'type': 'boolean'}]}}, 'type': 'object'}}, 'type': 'object'}, 'custom_rules': {'description': 'custom rule file to use', 'type': 'string'}, 'deb
ug': {'description': 'Debug mode', 'type': 'boolean'}, 'ignore_bad_template': {'description': 'Ignore bad templates', 'type': 'boolean'}, 'ignore_checks': {'description': 'List of checks to ignore', 'items': {'type': 'string'}, 'type': 'array'}, 'ignore_templates': {'description': 'Templates to ignore', 'i
tems': {'type': 'string'}, 'type': 'array'}, 'include_checks': {'description': 'List of checks to include', 'items': {'type': 'string'}, 'type': 'array'}, 'mandatory_checks': {'description': 'List of mandatory checks to enforce', 'items': {'type': 'string'}, 'type': 'array'}, 'merge_configs': {'description
': 'Merges lists between configuration layers', 'type': 'boolean'}, 'output_file': {'description': 'Path to the file to write the main output to', 'type': 'string'}, 'override_spec': {'description': 'Path to spec file to override with', 'type': 'string'}, 'regions': {'description': 'Regions to test against
', 'items': {'type': 'string'}, 'type': 'array'}, 'registry_schemas': {'description': 'One or more directories of CloudFormation Registry Resource Schemas', 'items': {'type': 'string'}, 'type': 'array'}, 'templates': {'description': 'Templates to lint', 'items': {'type': 'string'}, 'type': 'array'}}, 'title': 'CFNLINTRC JSON Schema', 'type': 'object'}
2025-07-29 18:58:31 Config used: {'templates': ['cloudformation/template.yaml'], 'include_checks': ['I']}
2025-07-29 18:58:31 CFNLINTRC looks valid!
2025-07-29 18:58:31 User configuration loaded as
2025-07-29 18:58:31 {}
2025-07-29 18:58:31 Project configuration loaded as
2025-07-29 18:58:31 {'templates': ['cloudformation/template.yaml'], 'include_checks': ['I']}
2025-07-29 18:58:31 Merging configurations...
2025-07-29 18:58:31 List of Cloudformation Templates to lint: ['cloudformation\\template.yaml'] from ['cloudformation/template.yaml']
2025-07-29 18:58:31 Run scan of template None
2025-07-29 18:58:31 SAM Translator: 1.99.0
2025-07-29 18:58:31 Setting AWS_DEFAULT_REGION to us-east-1
2025-07-29 18:58:32 Transformed template from AWS::Serverless-2016-10-31:
{
 "AWSTemplateFormatVersion": "2010-09-09",
 "Conditions": {
  "DevelopmentMode": {
   "Fn::Equals": [
    "true",
    {
     "Ref": "DevelopmentMode"
    }
   ]
  },
  "EnableFeedbackSubmission": {
   "Fn::Not": [
    {
     "Fn::Equals": [
      "",
      {
       "Ref": "DevPortalAdminEmail"
      }
     ]
    }
   ]
  },
  "InUSEastOne": {
   "Fn::Equals": [
    "us-east-1",
    {
     "Ref": "AWS::Region"
    }
   ]
  },
  "InviteAccountRegistrationMode": {
   "Fn::Equals": [
    "invite",
    {
     "Ref": "AccountRegistrationMode"
    }
   ]
  },
  "LocalDevelopmentMode": {
   "Fn::Or": [
    {
     "Fn::Equals": [
      "true",
      {
       "Ref": "DevelopmentMode"
      }
     ]
    },
    {
     "Fn::Equals": [
      "true",
      {
       "Ref": "LocalDevelopmentMode"
      }
     ]
    }
   ]
  },
  "NoCustomDomainName": {
   "Fn::And": [
    {
     "Fn::Not": [
      {
       "Condition": "UseCustomDomainName"
      }
     ]
    },
    {
     "Condition": "NotDevelopmentMode"
    }
   ]
  },
  "NotDevelopmentMode": {
   "Fn::Not": [
    {
     "Condition": "DevelopmentMode"
    }
   ]
  },
  "UseCustomDomainName": {
   "Fn::And": [
    {
     "Fn::Not": [
      {
       "Fn::Equals": [
        "",
        {
         "Ref": "CustomDomainName"
        }
       ]
      }
     ]
    },
    {
     "Fn::Not": [
      {
       "Fn::Equals": [
        "",
        {
         "Ref": "CustomDomainNameAcmCertArn"
        }
       ]
      }
     ]
    },
    {
     "Condition": "NotDevelopmentMode"
    }
   ]
  },
  "UseCustomHostedZone": {
   "Fn::Not": [
    {
     "Fn::Equals": [
      "",
      {
       "Ref": "HostedZoneName"
      }
     ]
    }
   ]
  },
  "UseRoute53": {
   "Fn::And": [
    {
     "Fn::Equals": [
      "true",
      {
       "Ref": "UseRoute53Nameservers"
      }
     ]
    },
    {
     "Condition": "UseCustomDomainName"
    }
   ]
  }
 },
 "Description": "My Dev Portal Stack",
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "Dev Portal Content Configuration"
     },
     "Parameters": [
      "ArtifactsS3BucketName",
      "DevPortalSiteS3BucketName",
      "StaticAssetRebuildToken",
      "StaticAssetRebuildMode"
     ]
    },
    {
     "Label": {
      "default": "Dev Portal Customer Configuration"
     },
     "Parameters": [
      "CognitoIdentityPoolName",
      "DevPortalCustomersTableName",
      "AccountRegistrationMode"
     ]
    },
    {
     "Label": {
      "default": "Custom Domain Configuration"
     },
     "Parameters": [
      "CustomDomainName",
      "CustomDomainNameAcmCertArn",
      "UseRoute53Nameservers",
      "CognitoDomainNameOrPrefix"
     ]
    },
    {
     "Label": {
      "default": "Dev Portal Customer Feedback Configuration"
     },
     "Parameters": [
      "DevPortalAdminEmail",
      "DevPortalFeedbackTableName"
     ]
    }
   ]
  },
  "cfn-lint": {
   "config": {
    "ignore_checks": [
     "E3004",
     "I1022"
    ]
   }
  }
 },
 "Outputs": {
  "CustomWebsiteURL": {
   "Condition": "UseCustomDomainName",
   "Description": "Custom URL for website",
   "Value": {
    "Ref": "CustomDomainName"
   }
  },
  "WebsiteURL": {
   "Description": "CloudFront URL for website",
   "Value": {
    "Fn::If": [
     "DevelopmentMode",
     {
      "Fn::Join": [
       "",
       [
        "https://",
        {
         "Fn::GetAtt": [
          "DevPortalSiteS3Bucket",
          "RegionalDomainName"
         ]
        },
        "/index.html"
       ]
      ]
     },
     {
      "Fn::If": [
       "UseCustomDomainName",
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Ref": "CustomDomainName"
          }
         ]
        ]
       },
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::GetAtt": [
            "DefaultCloudfrontDistribution",
            "DomainName"
           ]
          }
         ]
        ]
       }
      ]
     }
    ]
   }
  }
 },
 "Parameters": {
  "AccountRegistrationMode": {
   "AllowedValues": [
    "open",
    "invite"
   ],
   "Default": "open",
   "Description": "Methods allowed for account registration. In 'open' mode, any user may register for an account. In 'invite' mode, users cannot register or request an account; instead, an Admin must send an invite for the user to accept.",
   "Type": "String"
  },
  "ArtifactsS3BucketName": {
   "Description": "The S3 bucket in which the Open API documents are stored. Bucket names are globally unique, so you must change this.",
   "Type": "String"
  },
  "CognitoDomainNameOrPrefix": {
   "Description": "The Domain Name (or Prefix) at which your Cognito Hosted UI is located. This should be regionally unique.",
   "Type": "String"
  },
  "CognitoIdentityPoolName": {
   "Default": "DevPortalIdentityPool",
   "Description": "The name for your Cognito Identity Pool.",
   "Type": "String"
  },
  "CustomDomainName": {
   "Default": "",
   "Description": "Optionally provide a custom domain name associated with an ACM cert to create a developer portal at that domain name (provide with the format foo.bar.net). Leave blank to create a developer portal without a custom domain name. Standing up a developer portal stack with a custom domain name will take significantly longer than without.",
   "Type": "String"
  },
  "CustomDomainNameAcmCertArn": {
   "Default": "",
   "Description": "If you provided a domain name associated with an acm cert, then you must also specify here the acm cert's arn. Leave this blank to create a developer portal without a custom domain name.",
   "Type": "String"
  },
  "DevPortalAdminEmail": {
   "Default": "",
   "Description": "The email address where user submitted feedback notifications get sent.",
   "Type": "String"
  },
  "DevPortalCustomersTableName": {
   "Default": "DevPortalCustomers",
   "Description": "The name of the DynamoDB Customers table.",
   "Type": "String"
  },
  "DevPortalFeedbackTableName": {
   "Default": "DevPortalFeedback",
   "Description": "The name of the DynamoDB table storing feedback submitted by users.",
   "Type": "String"
  },
  "DevPortalPreLoginAccountsTableName": {
   "Default": "DevPortalPreLoginAccounts",
   "Description": "The name of the DynamoDB PreLoginAccounts table.",
   "Type": "String"
  },
  "DevPortalSiteS3BucketName": {
   "Description": "The S3 bucket in which the web application code is stored. Bucket names are globally unique, so you must change this.",
   "Type": "String"
  },
  "DevelopmentMode": {
   "AllowedValues": [
    "false",
    "true"
   ],
   "ConstraintDescription": "Malformed input - Parameter DevelopmentMode value must be either 'true' or 'false'",
   "Default": "false",
   "Description": "Enabling this weakens security features (OAI, SSL, site S3 bucket with public read ACLs, Cognito callback verification, CORS, etc.) for easier development. It also breaks frontend routing (except to /index.html), including deep linking and page refresh. Do not enable this in production! Additionally, do not update a stack that was previously in development mode to be a production stack; instead, make a new stack that has never been in development mode.",
   "Type": "String"
  },
  "EdgeLambdaRebuildToken": {
   "Default": "defaultRebuildToken",
   "Description": "Provide a token different from the last deployment's token to update the edge lambda. You can provide a timestamp or GUID on each deployment to always update it.",
   "Type": "String"
  },
  "HostedZoneName": {
   "Default": "",
   "Description": "The Route53 hosted zone name where the DNS record should be created (e.g., example.com for subdomain.example.com). If blank, uses CustomDomainName as the hosted zone.",
   "Type": "String"
  },
  "LocalDevelopmentMode": {
   "AllowedValues": [
    "false",
    "true"
   ],
   "ConstraintDescription": "Malformed input - Parameter LocalDevelopmentMode value must be either 'true' or 'false'",
   "Default": "false",
   "Description": "Enabling this disables CORS for easier local development. Do not enable this in production! Additionally, do not update a stack that was previously in development mode to be a production stack; instead, make a new stack that has never been in development mode.",
   "Type": "String"
  },
  "StaticAssetRebuildMode": {
   "AllowedValues": [
    "overwrite-content",
    ""
   ],
   "ConstraintDescription": "Malformed input - Parameter StaticAssetRebuildMode value must be either 'overwrite-content' or left blank.",
   "Default": "",
   "Description": "By default, a static asset rebuild doesn't overwrite custom-content. Provide the value `overwrite-content` to replace the custom-content with your local version. Don't do this unless you know what you're doing -- all custom changes in your s3 bucket will be lost.",
   "Type": "String"
  },
  "StaticAssetRebuildToken": {
   "Default": "defaultRebuildToken",
   "Description": "Provide a token different from the last deployment's token to re-upload the dev portal site's static assets. You can provide a timestamp or GUID on each deployment to always re-upload the assets.",
   "Type": "String"
  },
  "UseRoute53Nameservers": {
   "AllowedValues": [
    "false",
    "true"
   ],
   "ConstraintDescription": "Malformed input - Parameter UseRoute53Nameservers value must be either 'true' or 'false'",
   "Default": "false",
   "Description": "Only applicable if creating a custom domain name for your dev portal. Defaults to false, and you'll need to provide your own nameserver hosting. If set to true, a Route53 HostedZone and RecordSet are created for you.",
   "Type": "String"
  }
 },
 "Resources": {
  "ApiGatewayApi": {
   "Properties": {
    "DefinitionBody": {
     "info": {
      "title": {
       "Ref": "AWS::StackName"
      },
      "version": "1.0"
     },
     "paths": {
      "/": {
       "x-amazon-apigateway-any-method": {
        "responses": {},
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "type": "aws_proxy",
         "uri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DevPortalLambdaFunction.Arn}/invocations"
         }
        }
       }
      },
      "/{proxy+}": {
       "x-amazon-apigateway-any-method": {
        "responses": {},
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "type": "aws_proxy",
         "uri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DevPortalLambdaFunction.Arn}/invocations"
         }
        }
       }
      }
     },
     "swagger": "2.0"
    },
    "StageName": "prod",
    "Variables": {
     "DevPortalFunctionName": {
      "Ref": "DevPortalLambdaFunction"
     }
    },
    "__MANAGE_SWAGGER": true
   },
   "Type": "AWS::Serverless::Api"
  },
  "ArtifactsS3Bucket": {
   "Properties": {
    "BucketName": {
     "Ref": "ArtifactsS3BucketName"
    },
    "NotificationConfiguration": {
     "LambdaConfigurations": [
      {
       "Event": "s3:ObjectCreated:*",
       "Filter": {
        "S3Key": {
         "Rules": [
          {
           "Name": "prefix",
           "Value": "catalog/"
          }
         ]
        }
       },
       "Function": {
        "Fn::GetAtt": [
         "CatalogUpdaterLambdaFunction",
         "Arn"
        ]
       }
      },
      {
       "Event": "s3:ObjectRemoved:*",
       "Filter": {
        "S3Key": {
         "Rules": [
          {
           "Name": "prefix",
           "Value": "catalog/"
          }
         ]
        }
       },
       "Function": {
        "Fn::GetAtt": [
         "CatalogUpdaterLambdaFunction",
         "Arn"
        ]
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "Type": "AWS::S3::Bucket"
  },
  "AssetUploaderLambdaExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:PutObjectAcl"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:ListBucket"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            }
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:DeleteObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:DeleteObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:ListBucket"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            }
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "BackendLambdaExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "apigateway:*"
         ],
         "Effect": "Allow",
         "Resource": "*"
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:DeleteObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "apigateway:GET"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:apigateway:",
            {
             "Ref": "AWS::Region"
            },
            "::/restapis/",
            {
             "Ref": "ApiGatewayApi"
            },
            "/*/exports/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:Query",
          "dynamodb:Scan",
          "dynamodb:PutItem",
          "dynamodb:UpdateItem",
          "dynamodb:DeleteItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:dynamodb:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":table/",
            {
             "Ref": "CustomersTable"
            }
           ]
          ]
         }
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:Query",
          "dynamodb:Scan",
          "dynamodb:PutItem",
          "dynamodb:UpdateItem",
          "dynamodb:DeleteItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "PreLoginAccountsTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "lambda:InvokeFunction"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CatalogUpdaterLambdaFunction",
           "Arn"
          ]
         }
        },
        {
         "Fn::If": [
          "EnableFeedbackSubmission",
          {
           "Action": [
            "dynamodb:Scan",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::Join": [
             "",
             [
              "arn:aws:dynamodb:",
              {
               "Ref": "AWS::Region"
              },
              ":",
              {
               "Ref": "AWS::AccountId"
              },
              ":table/",
              {
               "Ref": "FeedbackTable"
              }
             ]
            ]
           }
          },
          {
           "Ref": "AWS::NoValue"
          }
         ]
        },
        {
         "Fn::If": [
          "EnableFeedbackSubmission",
          {
           "Action": [
            "sns:Publish"
           ],
           "Effect": "Allow",
           "Resource": {
            "Ref": "FeedbackSubmittedSNSTopic"
           }
          },
          {
           "Ref": "AWS::NoValue"
          }
         ]
        },
        {
         "Action": [
          "cognito-idp:ListUsers",
          "cognito-idp:ListUsersInGroup",
          "cognito-idp:AdminAddUserToGroup",
          "cognito-idp:AdminCreateUser",
          "cognito-idp:AdminDeleteUser",
          "cognito-idp:AdminGetUser",
          "cognito-idp:AdminListGroupsForUser"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CatalogUpdaterLambdaExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "s3:ListBucket"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:s3:::",
             {
              "Ref": "ArtifactsS3BucketName"
             }
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:s3:::",
             {
              "Ref": "DevPortalSiteS3BucketName"
             }
            ]
           ]
          }
         ]
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "apigateway:*"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CatalogUpdaterLambdaFunction": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "BucketName": {
       "Ref": "ArtifactsS3BucketName"
      },
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CatalogUpdaterLambdaExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 20
   },
   "Type": "AWS::Serverless::Function"
  },
  "CatalogUpdaterLambdaPermissions": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CatalogUpdaterLambdaFunction",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CloudFrontEdgeReplicatorRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "lambda:CreateFunction",
          "lambda:GetFunction",
          "lambda:GetFunctionConfiguration",
          "lambda:UpdateFunctionCode",
          "lambda:PublishVersion"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:lambda:*:*:*"
        },
        {
         "Action": [
          "iam:PassRole"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/*"
         }
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:DeleteObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CloudFrontOriginAccessIdentity": {
   "Condition": "NotDevelopmentMode",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": {
      "Ref": "AWS::StackName"
     }
    }
   },
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
  },
  "CloudFrontSecurityHeadersLambda": {
   "Properties": {
    "AutoPublishAlias": "Live",
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "Bucket": {
       "Ref": "ArtifactsS3BucketName"
      }
     }
    },
    "Handler": "replicator.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CloudFrontEdgeReplicatorRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 300
   },
   "Type": "AWS::Serverless::Function"
  },
  "CloudFrontSecurityHeadersSetup": {
   "Properties": {
    "Name": {
     "Ref": "CloudFrontSecurityHeadersLambda"
    },
    "RebuildToken": {
     "Ref": "EdgeLambdaRebuildToken"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "LambdaEdgeFunctionRole",
      "Arn"
     ]
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "CloudFrontSecurityHeadersLambda",
      "Arn"
     ]
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "CognitoAdminRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        },
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "CognitoIdentityPool"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:execute-api:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":",
            {
             "Ref": "ApiGatewayApi"
            },
            "/prod/*/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "CognitoAdminRole"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoAdminsGroup": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "Description": "Admin users of the developer portal",
    "GroupName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::StackName"
       },
       "AdminsGroup"
      ]
     ]
    },
    "Precedence": 0,
    "RoleArn": {
     "Fn::GetAtt": [
      "CognitoAdminRole",
      "Arn"
     ]
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::Cognito::UserPoolGroup",
   "UpdateReplacePolicy": "Retain"
  },
  "CognitoAuthenticatedRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        },
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "CognitoIdentityPool"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:execute-api:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":",
            {
             "Ref": "ApiGatewayApi"
            },
            "/prod/*/signin"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "CognitoAuthenticatedRole"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoIdentityPool": {
   "Properties": {
    "AllowUnauthenticatedIdentities": false,
    "CognitoIdentityProviders": [
     {
      "ClientId": {
       "Ref": "CognitoUserPoolClient"
      },
      "ProviderName": {
       "Fn::Join": [
        "",
        [
         "cognito-idp.",
         {
          "Ref": "AWS::Region"
         },
         ".amazonaws.com/",
         {
          "Ref": "CognitoUserPool"
         }
        ]
       ]
      }
     }
    ],
    "IdentityPoolName": {
     "Ref": "CognitoIdentityPoolName"
    }
   },
   "Type": "AWS::Cognito::IdentityPool"
  },
  "CognitoIdentityPoolRoles": {
   "Properties": {
    "IdentityPoolId": {
     "Ref": "CognitoIdentityPool"
    },
    "Roles": {
     "authenticated": {
      "Fn::GetAtt": [
       "CognitoAuthenticatedRole",
       "Arn"
      ]
     }
    }
   },
   "Type": "AWS::Cognito::IdentityPoolRoleAttachment"
  },
  "CognitoPostAuthenticationTriggerExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "dynamodb:Scan",
          "dynamodb:PutItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CustomersTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:PutItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "PreLoginAccountsTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "cognito-idp:AdminAddUserToGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoPostAuthenticationTriggerFn": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "CustomersTableName": {
       "Ref": "DevPortalCustomersTableName"
      },
      "PreLoginAccountsTableName": {
       "Ref": "DevPortalPreLoginAccountsTableName"
      },
      "RegisteredGroupName": {
       "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
      }
     }
    },
    "FunctionName": {
     "Fn::Sub": "${AWS::StackName}-CognitoPostAuthenticationTriggerFn"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoPostAuthenticationTriggerExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "Type": "AWS::Serverless::Function"
  },
  "CognitoPostAuthenticationTriggerFnExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CognitoPostAuthenticationTriggerFn",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:cognito-idp:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":userpool/",
       {
        "Ref": "CognitoUserPool"
       }
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CognitoPostConfirmationTriggerExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "dynamodb:PutItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "PreLoginAccountsTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "cognito-idp:AdminAddUserToGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoPostConfirmationTriggerFn": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "AccountRegistrationMode": {
       "Ref": "AccountRegistrationMode"
      },
      "PreLoginAccountsTableName": {
       "Ref": "DevPortalPreLoginAccountsTableName"
      },
      "RegisteredGroupName": {
       "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
      }
     }
    },
    "FunctionName": {
     "Fn::Sub": "${AWS::StackName}-CognitoPostConfirmationTriggerFn"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoPostConfirmationTriggerExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "Type": "AWS::Serverless::Function"
  },
  "CognitoPostConfirmationTriggerFnExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CognitoPostConfirmationTriggerFn",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:cognito-idp:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":userpool/",
       {
        "Ref": "CognitoUserPool"
       }
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CognitoPreSignupTriggerExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoPreSignupTriggerFn": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "AccountRegistrationMode": {
       "Ref": "AccountRegistrationMode"
      }
     }
    },
    "FunctionName": {
     "Fn::Sub": "${AWS::StackName}-CognitoPreSignupTriggerFn"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoPreSignupTriggerExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "Type": "AWS::Serverless::Function"
  },
  "CognitoPreSignupTriggerFnExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CognitoPreSignupTriggerFn",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:cognito-idp:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":userpool/",
       {
        "Ref": "CognitoUserPool"
       }
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CognitoRegisteredGroup": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "Description": "Registered users in the developer portal",
    "GroupName": {
     "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
    },
    "Precedence": 1,
    "RoleArn": {
     "Fn::GetAtt": [
      "CognitoRegisteredRole",
      "Arn"
     ]
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::Cognito::UserPoolGroup",
   "UpdateReplacePolicy": "Retain"
  },
  "CognitoRegisteredRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        },
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "CognitoIdentityPool"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}/prod/*"
          }
         ]
        },
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Deny",
         "Resource": [
          {
           "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}/prod/*/admin/*"
          }
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "CognitoRegisteredRole"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoUserPool": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": {
      "Fn::If": [
       "InviteAccountRegistrationMode",
       true,
       false
      ]
     },
     "InviteMessageTemplate": {
      "EmailMessage": {
       "Fn::Join": [
        "",
        [
         "<h2>Developer Portal</h2><p>You have been invited to access the developer portal at <a href=\"",
         {
          "Fn::If": [
           "DevelopmentMode",
           {
            "Fn::Join": [
             "",
             [
              "https://",
              {
               "Fn::GetAtt": [
                "DevPortalSiteS3Bucket",
                "RegionalDomainName"
               ]
              },
              "/index.html"
             ]
            ]
           },
           {
            "Fn::If": [
             "UseCustomDomainName",
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Ref": "CustomDomainName"
                }
               ]
              ]
             },
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Fn::GetAtt": [
                  "DefaultCloudfrontDistribution",
                  "DomainName"
                 ]
                }
               ]
              ]
             }
            ]
           }
          ]
         },
         "\">",
         {
          "Fn::If": [
           "DevelopmentMode",
           {
            "Fn::Join": [
             "",
             [
              "https://",
              {
               "Fn::GetAtt": [
                "DevPortalSiteS3Bucket",
                "RegionalDomainName"
               ]
              },
              "/index.html"
             ]
            ]
           },
           {
            "Fn::If": [
             "UseCustomDomainName",
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Ref": "CustomDomainName"
                }
               ]
              ]
             },
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Fn::GetAtt": [
                  "DefaultCloudfrontDistribution",
                  "DomainName"
                 ]
                }
               ]
              ]
             }
            ]
           }
          ]
         },
         "</a>.</p><p><b>Username:</b> {username}<br><b>Temporary password:</b> {####}</p>"
        ]
       ]
      },
      "EmailSubject": "Developer Portal - Invitation"
     }
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "<h2>Developer Portal</h2><p>Your verification code is <b>{####}</b></p>",
    "EmailVerificationSubject": "Developer Portal - Verification Code",
    "LambdaConfig": {
     "PostAuthentication": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:"
        },
        {
         "Fn::Sub": "${AWS::StackName}-CognitoPostAuthenticationTriggerFn"
        }
       ]
      ]
     },
     "PostConfirmation": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:"
        },
        {
         "Fn::Sub": "${AWS::StackName}-CognitoPostConfirmationTriggerFn"
        }
       ]
      ]
     },
     "PreSignUp": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:"
        },
        {
         "Fn::Sub": "${AWS::StackName}-CognitoPreSignupTriggerFn"
        }
       ]
      ]
     }
    },
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 12,
      "RequireLowercase": true,
      "RequireNumbers": true
     }
    },
    "Schema": [
     {
      "AttributeDataType": "String",
      "Name": "email",
      "Required": true
     }
    ],
    "UserPoolName": {
     "Ref": "CognitoIdentityPoolName"
    },
    "UsernameAttributes": [
     "email"
    ]
   },
   "Type": "AWS::Cognito::UserPool",
   "UpdateReplacePolicy": "Retain"
  },
  "CognitoUserPoolClient": {
   "Properties": {
    "ClientName": "CognitoIdentityPool",
    "GenerateSecret": false,
    "PreventUserExistenceErrors": "ENABLED",
    "RefreshTokenValidity": 30,
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::Cognito::UserPoolClient"
  },
  "CognitoUserPoolClientSettings": {
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "openid"
    ],
    "CallbackURL": {
     "Fn::If": [
      "LocalDevelopmentMode",
      [
       "http://localhost:3000/index.html?action=login",
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::GetAtt": [
            "DevPortalSiteS3Bucket",
            "RegionalDomainName"
           ]
          },
          "/index.html?action=login"
         ]
        ]
       },
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=login"
         ]
        ]
       }
      ],
      [
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=login"
         ]
        ]
       }
      ]
     ]
    },
    "LogoutURL": {
     "Fn::If": [
      "LocalDevelopmentMode",
      [
       "http://localhost:3000/index.html?action=logout",
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::GetAtt": [
            "DevPortalSiteS3Bucket",
            "RegionalDomainName"
           ]
          },
          "/index.html?action=logout"
         ]
        ]
       },
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=logout"
         ]
        ]
       }
      ],
      [
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=logout"
         ]
        ]
       }
      ]
     ]
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "CognitoUserPoolClientSettingsBackingFn",
      "Arn"
     ]
    },
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "Timeout": 360,
    "UserPoolClientId": {
     "Ref": "CognitoUserPoolClient"
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "CognitoUserPoolClientSettingsBackingFn": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoUserPoolClientSettingsBackingFnRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 300
   },
   "Type": "AWS::Serverless::Function"
  },
  "CognitoUserPoolClientSettingsBackingFnRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "cognito-idp:UpdateUserPoolClient",
         "Effect": "Allow",
         "Resource": "arn:aws:cognito-idp:*:*:userpool/*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "UpdateUserPoolClient"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoUserPoolDomain": {
   "Properties": {
    "Domain": {
     "Ref": "CognitoDomainNameOrPrefix"
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "CognitoUserPoolDomainBackingFn",
      "Arn"
     ]
    },
    "Timeout": 360,
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "CognitoUserPoolDomainBackingFn": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoUserPoolDomainBackingFnRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 300
   },
   "Type": "AWS::Serverless::Function"
  },
  "CognitoUserPoolDomainBackingFnRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "cognito-idp:CreateUserPoolDomain",
         "Effect": "Allow",
         "Resource": "arn:aws:cognito-idp:*:*:userpool/*"
        },
        {
         "Action": "cognito-idp:DeleteUserPoolDomain",
         "Effect": "Allow",
         "Resource": "arn:aws:cognito-idp:*:*:userpool/*"
        },
        {
         "Action": "cognito-idp:DescribeUserPoolDomain",
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ManageUserPoolDomain"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CustomDomainCloudfrontDistribution": {
   "Condition": "UseCustomDomainName",
   "DependsOn": "DevPortalSiteS3Bucket",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      {
       "Ref": "CustomDomainName"
      }
     ],
     "Comment": {
      "Fn::Sub": "${AWS::StackName} distribution"
     },
     "CustomErrorResponses": [
      {
       "ErrorCode": 403,
       "ResponseCode": 403,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "ForwardedValues": {
       "QueryString": true
      },
      "LambdaFunctionAssociations": [
       {
        "EventType": "origin-response",
        "LambdaFunctionARN": {
         "Fn::GetAtt": [
          "CloudFrontSecurityHeadersSetup",
          "EdgeArn"
         ]
        }
       }
      ],
      "TargetOriginId": "dev-portal-site-s3-bucket",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::If": [
         "InUSEastOne",
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3.amazonaws.com"
           ]
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3-",
            {
             "Ref": "AWS::Region"
            },
            ".amazonaws.com"
           ]
          ]
         }
        ]
       },
       "Id": "dev-portal-site-s3-bucket",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Sub": "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        }
       }
      }
     ],
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Ref": "CustomDomainNameAcmCertArn"
      },
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "Type": "AWS::CloudFront::Distribution"
  },
  "CustomDomainDistributionAccessIdentity": {
   "Condition": "UseCustomDomainName",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": {
      "Fn::Sub": "CloudFront OAI for ${CustomDomainName}"
     }
    }
   },
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
  },
  "CustomDomainHostedZone": {
   "Condition": "UseRoute53",
   "Properties": {
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "CustomDomainName"
       },
       "."
      ]
     ]
    }
   },
   "Type": "AWS::Route53::HostedZone"
  },
  "CustomDomainRecordSet": {
   "Condition": "UseRoute53",
   "Properties": {
    "HostedZoneName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "CustomDomainName"
       },
       "."
      ]
     ]
    },
    "RecordSets": [
     {
      "AliasTarget": {
       "DNSName": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "CustomDomainCloudfrontDistribution",
            "DomainName"
           ]
          },
          "."
         ]
        ]
       },
       "HostedZoneId": "Z2FDTNDATAQYW2"
      },
      "Name": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "CustomDomainName"
         },
         "."
        ]
       ]
      },
      "Type": "A"
     }
    ]
   },
   "Type": "AWS::Route53::RecordSetGroup"
  },
  "CustomersTable": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "Id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "Id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": {
     "Ref": "DevPortalCustomersTableName"
    }
   },
   "Type": "AWS::DynamoDB::Table",
   "UpdateReplacePolicy": "Retain"
  },
  "DefaultCloudfrontDistribution": {
   "Condition": "NoCustomDomainName",
   "Properties": {
    "DistributionConfig": {
     "Comment": {
      "Fn::Sub": "${AWS::StackName} distribution"
     },
     "CustomErrorResponses": [
      {
       "ErrorCode": 403,
       "ResponseCode": 403,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "ForwardedValues": {
       "QueryString": true
      },
      "LambdaFunctionAssociations": [
       {
        "EventType": "origin-response",
        "LambdaFunctionARN": {
         "Fn::GetAtt": [
          "CloudFrontSecurityHeadersSetup",
          "EdgeArn"
         ]
        }
       }
      ],
      "TargetOriginId": "dev-portal-site-s3-bucket",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::If": [
         "InUSEastOne",
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3.amazonaws.com"
           ]
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3-",
            {
             "Ref": "AWS::Region"
            },
            ".amazonaws.com"
           ]
          ]
         }
        ]
       },
       "Id": "dev-portal-site-s3-bucket",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Sub": "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        }
       }
      }
     ]
    }
   },
   "Type": "AWS::CloudFront::Distribution"
  },
  "DevPortalLambdaFunction": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "AdminsGroupName": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "AWS::StackName"
         },
         "AdminsGroup"
        ]
       ]
      },
      "CatalogUpdaterFunctionArn": {
       "Fn::GetAtt": [
        "CatalogUpdaterLambdaFunction",
        "Arn"
       ]
      },
      "CustomersTableName": {
       "Ref": "DevPortalCustomersTableName"
      },
      "DevelopmentMode": {
       "Ref": "DevelopmentMode"
      },
      "FeedbackSnsTopicArn": {
       "Fn::If": [
        "EnableFeedbackSubmission",
        {
         "Ref": "FeedbackSubmittedSNSTopic"
        },
        ""
       ]
      },
      "FeedbackTableName": {
       "Ref": "DevPortalFeedbackTableName"
      },
      "NODE_ENV": "production",
      "PreLoginAccountsTableName": {
       "Ref": "DevPortalPreLoginAccountsTableName"
      },
      "RegisteredGroupName": {
       "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
      },
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      },
      "StaticBucketName": {
       "Ref": "ArtifactsS3BucketName"
      },
      "UserPoolId": {
       "Ref": "CognitoUserPool"
      },
      "WEBSITE_BUCKET_NAME": {
       "Ref": "DevPortalSiteS3BucketName"
      }
     }
    },
    "Events": {
     "ProxyApiGreedy": {
      "Properties": {
       "Method": "ANY",
       "Path": "/{proxy+}",
       "RestApiId": {
        "Ref": "ApiGatewayApi"
       }
      },
      "Type": "Api"
     },
     "ProxyApiRoot": {
      "Properties": {
       "Method": "ANY",
       "Path": "/",
       "RestApiId": {
        "Ref": "ApiGatewayApi"
       }
      },
      "Type": "Api"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "BackendLambdaExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 30
   },
   "Type": "AWS::Serverless::Function"
  },
  "DevPortalSiteS3Bucket": {
   "Properties": {
    "BucketName": {
     "Ref": "DevPortalSiteS3BucketName"
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "Type": "AWS::S3::Bucket"
  },
  "DevPortalSiteS3BucketPolicy": {
   "Condition": "NotDevelopmentMode",
   "Properties": {
    "Bucket": {
     "Ref": "DevPortalSiteS3Bucket"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Sub": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"
        }
       },
       "Resource": {
        "Fn::Sub": "arn:aws:s3:::${DevPortalSiteS3Bucket}/*"
       }
      }
     ]
    }
   },
   "Type": "AWS::S3::BucketPolicy"
  },
  "DumpV3AccountDataExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "dynamodb:Scan",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CustomersTable",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ReadCustomersTable"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "cognito-idp:ListUsers",
          "cognito-idp:ListUsersInGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ListUserPool"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "DumpV3AccountDataFn": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "AdminsGroupName": {
       "Ref": "CognitoAdminsGroup"
      },
      "CustomersTableName": {
       "Ref": "DevPortalCustomersTableName"
      },
      "UserPoolId": {
       "Ref": "CognitoUserPool"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "DumpV3AccountDataExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 300
   },
   "Type": "AWS::Serverless::Function"
  },
  "FeedbackSubmittedSNSTopic": {
   "Condition": "EnableFeedbackSubmission",
   "Properties": {
    "Subscription": [
     {
      "Endpoint": {
       "Ref": "DevPortalAdminEmail"
      },
      "Protocol": "email"
     }
    ]
   },
   "Type": "AWS::SNS::Topic"
  },
  "FeedbackTable": {
   "Condition": "EnableFeedbackSubmission",
   "DeletionPolicy": "Retain",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "Id",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "FeedbackIdIndex",
      "KeySchema": [
       {
        "AttributeName": "Id",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "KEYS_ONLY"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "Id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": {
     "Ref": "DevPortalFeedbackTableName"
    }
   },
   "Type": "AWS::DynamoDB::Table",
   "UpdateReplacePolicy": "Retain"
  },
  "LambdaApiGatewayExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DevPortalLambdaFunction",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiGatewayApi"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "LambdaCommonLayer": {
   "Properties": {
    "CompatibleRuntimes": [
     "nodejs16.x"
    ],
    "ContentUri": "s3://bucket/value",
    "Description": "Common code used by lambdas"
   },
   "Type": "AWS::Serverless::LayerVersion"
  },
  "LambdaEdgeFunctionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "lambda.amazonaws.com",
         "edgelambda.amazonaws.com"
        ]
       },
       "Sid": "AllowLambdaServiceToAssumeRole"
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    ],
    "Path": "/"
   },
   "Type": "AWS::IAM::Role"
  },
  "PreLoginAccountsTable": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "UserId",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "UserId",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": {
     "Ref": "DevPortalPreLoginAccountsTableName"
    }
   },
   "Type": "AWS::DynamoDB::Table",
   "UpdateReplacePolicy": "Retain"
  },
  "StaticAssetUploader": {
   "DependsOn": "ArtifactsS3Bucket",
   "Properties": {
    "BucketName": {
     "Ref": "DevPortalSiteS3Bucket"
    },
    "DevelopmentMode": {
     "Ref": "DevelopmentMode"
    },
    "FeedbackEnabled": {
     "Fn::If": [
      "EnableFeedbackSubmission",
      "true",
      "false"
     ]
    },
    "IdentityPoolId": {
     "Ref": "CognitoIdentityPool"
    },
    "RebuildMode": {
     "Ref": "StaticAssetRebuildMode"
    },
    "RebuildToken": {
     "Ref": "StaticAssetRebuildToken"
    },
    "Region": {
     "Ref": "AWS::Region"
    },
    "RestApiId": {
     "Ref": "ApiGatewayApi"
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "StaticAssetUploaderLambdaFunction",
      "Arn"
     ]
    },
    "UserPoolClientId": {
     "Ref": "CognitoUserPoolClient"
    },
    "UserPoolDomain": {
     "Fn::GetAtt": [
      "CognitoUserPoolDomain",
      "FullUrl"
     ]
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "StaticAssetUploaderLambdaFunction": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      },
      "StaticBucketName": {
       "Ref": "ArtifactsS3BucketName"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "AssetUploaderLambdaExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 300
   },
   "Type": "AWS::Serverless::Function"
  },
  "SubdomainDelegationRecords": {
   "Condition": {
    "Fn::And": [
     {
      "Condition": "UseRoute53"
     },
     {
      "Condition": "UseCustomHostedZone"
     }
    ]
   },
   "Properties": {
    "HostedZoneName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "HostedZoneName"
       },
       "."
      ]
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "CustomDomainName"
       },
       "."
      ]
     ]
    },
    "ResourceRecords": {
     "Fn::GetAtt": [
      "CustomDomainHostedZone",
      "NameServers"
     ]
    },
    "TTL": 300,
    "Type": "NS"
   },
   "Type": "AWS::Route53::RecordSet"
  },
  "UserGroupImporter": {
   "Properties": {
    "CodeUri": "s3://bucket/value",
    "Environment": {
     "Variables": {
      "AdminsGroup": {
       "Ref": "CognitoAdminsGroup"
      },
      "CustomersTable": {
       "Ref": "CustomersTable"
      },
      "FeedbackTable": {
       "Fn::If": [
        "EnableFeedbackSubmission",
        {
         "Ref": "FeedbackTable"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      "RegisteredGroup": {
       "Ref": "CognitoRegisteredGroup"
      },
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      },
      "UserPoolId": {
       "Ref": "CognitoUserPool"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "UserGroupImporterExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Timeout": 900
   },
   "Type": "AWS::Serverless::Function"
  },
  "UserGroupImporterExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "s3:getObject",
         "Effect": "Allow",
         "Resource": "arn:aws:s3:::*/*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "S3GetObject"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "dynamodb:Scan"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::If": [
           "EnableFeedbackSubmission",
           [
            {
             "Fn::GetAtt": [
              "CustomersTable",
              "Arn"
             ]
            },
            {
             "Fn::GetAtt": [
              "FeedbackTable",
              "Arn"
             ]
            }
           ],
           [
            {
             "Fn::GetAtt": [
              "CustomersTable",
              "Arn"
             ]
            }
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "RestoreTables"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "cognito-idp:AdminCreateUser",
          "cognito-idp:AdminAddUserToGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "UpdateCognitoUserList"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  }
 },
 "Transform": "AWS::Serverless-2016-10-31"
}
2025-07-29 18:58:32 Transformed template:
{
 "AWSTemplateFormatVersion": "2010-09-09",
 "Conditions": {
  "DevelopmentMode": {
   "Fn::Equals": [
    "true",
    {
     "Ref": "DevelopmentMode"
    }
   ]
  },
  "EnableFeedbackSubmission": {
   "Fn::Not": [
    {
     "Fn::Equals": [
      "",
      {
       "Ref": "DevPortalAdminEmail"
      }
     ]
    }
   ]
  },
  "InUSEastOne": {
   "Fn::Equals": [
    "us-east-1",
    {
     "Ref": "AWS::Region"
    }
   ]
  },
  "InviteAccountRegistrationMode": {
   "Fn::Equals": [
    "invite",
    {
     "Ref": "AccountRegistrationMode"
    }
   ]
  },
  "LocalDevelopmentMode": {
   "Fn::Or": [
    {
     "Fn::Equals": [
      "true",
      {
       "Ref": "DevelopmentMode"
      }
     ]
    },
    {
     "Fn::Equals": [
      "true",
      {
       "Ref": "LocalDevelopmentMode"
      }
     ]
    }
   ]
  },
  "NoCustomDomainName": {
   "Fn::And": [
    {
     "Fn::Not": [
      {
       "Condition": "UseCustomDomainName"
      }
     ]
    },
    {
     "Condition": "NotDevelopmentMode"
    }
   ]
  },
  "NotDevelopmentMode": {
   "Fn::Not": [
    {
     "Condition": "DevelopmentMode"
    }
   ]
  },
  "UseCustomDomainName": {
   "Fn::And": [
    {
     "Fn::Not": [
      {
       "Fn::Equals": [
        "",
        {
         "Ref": "CustomDomainName"
        }
       ]
      }
     ]
    },
    {
     "Fn::Not": [
      {
       "Fn::Equals": [
        "",
        {
         "Ref": "CustomDomainNameAcmCertArn"
        }
       ]
      }
     ]
    },
    {
     "Condition": "NotDevelopmentMode"
    }
   ]
  },
  "UseCustomHostedZone": {
   "Fn::Not": [
    {
     "Fn::Equals": [
      "",
      {
       "Ref": "HostedZoneName"
      }
     ]
    }
   ]
  },
  "UseRoute53": {
   "Fn::And": [
    {
     "Fn::Equals": [
      "true",
      {
       "Ref": "UseRoute53Nameservers"
      }
     ]
    },
    {
     "Condition": "UseCustomDomainName"
    }
   ]
  }
 },
 "Description": "My Dev Portal Stack",
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "Dev Portal Content Configuration"
     },
     "Parameters": [
      "ArtifactsS3BucketName",
      "DevPortalSiteS3BucketName",
      "StaticAssetRebuildToken",
      "StaticAssetRebuildMode"
     ]
    },
    {
     "Label": {
      "default": "Dev Portal Customer Configuration"
     },
     "Parameters": [
      "CognitoIdentityPoolName",
      "DevPortalCustomersTableName",
      "AccountRegistrationMode"
     ]
    },
    {
     "Label": {
      "default": "Custom Domain Configuration"
     },
     "Parameters": [
      "CustomDomainName",
      "CustomDomainNameAcmCertArn",
      "UseRoute53Nameservers",
      "CognitoDomainNameOrPrefix"
     ]
    },
    {
     "Label": {
      "default": "Dev Portal Customer Feedback Configuration"
     },
     "Parameters": [
      "DevPortalAdminEmail",
      "DevPortalFeedbackTableName"
     ]
    }
   ]
  },
  "cfn-lint": {
   "config": {
    "ignore_checks": [
     "E3004",
     "I1022"
    ]
   }
  }
 },
 "Outputs": {
  "CustomWebsiteURL": {
   "Condition": "UseCustomDomainName",
   "Description": "Custom URL for website",
   "Value": {
    "Ref": "CustomDomainName"
   }
  },
  "WebsiteURL": {
   "Description": "CloudFront URL for website",
   "Value": {
    "Fn::If": [
     "DevelopmentMode",
     {
      "Fn::Join": [
       "",
       [
        "https://",
        {
         "Fn::GetAtt": [
          "DevPortalSiteS3Bucket",
          "RegionalDomainName"
         ]
        },
        "/index.html"
       ]
      ]
     },
     {
      "Fn::If": [
       "UseCustomDomainName",
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Ref": "CustomDomainName"
          }
         ]
        ]
       },
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::GetAtt": [
            "DefaultCloudfrontDistribution",
            "DomainName"
           ]
          }
         ]
        ]
       }
      ]
     }
    ]
   }
  }
 },
 "Parameters": {
  "AccountRegistrationMode": {
   "AllowedValues": [
    "open",
    "invite"
   ],
   "Default": "open",
   "Description": "Methods allowed for account registration. In 'open' mode, any user may register for an account. In 'invite' mode, users cannot register or request an account; instead, an Admin must send an invite for the user to accept.",
   "Type": "String"
  },
  "ArtifactsS3BucketName": {
   "Description": "The S3 bucket in which the Open API documents are stored. Bucket names are globally unique, so you must change this.",
   "Type": "String"
  },
  "CognitoDomainNameOrPrefix": {
   "Description": "The Domain Name (or Prefix) at which your Cognito Hosted UI is located. This should be regionally unique.",
   "Type": "String"
  },
  "CognitoIdentityPoolName": {
   "Default": "DevPortalIdentityPool",
   "Description": "The name for your Cognito Identity Pool.",
   "Type": "String"
  },
  "CustomDomainName": {
   "Default": "",
   "Description": "Optionally provide a custom domain name associated with an ACM cert to create a developer portal at that domain name (provide with the format foo.bar.net). Leave blank to create a developer portal without a custom domain name. Standing up a developer portal stack with a custom domain name will take significantly longer than without.",
   "Type": "String"
  },
  "CustomDomainNameAcmCertArn": {
   "Default": "",
   "Description": "If you provided a domain name associated with an acm cert, then you must also specify here the acm cert's arn. Leave this blank to create a developer portal without a custom domain name.",
   "Type": "String"
  },
  "DevPortalAdminEmail": {
   "Default": "",
   "Description": "The email address where user submitted feedback notifications get sent.",
   "Type": "String"
  },
  "DevPortalCustomersTableName": {
   "Default": "DevPortalCustomers",
   "Description": "The name of the DynamoDB Customers table.",
   "Type": "String"
  },
  "DevPortalFeedbackTableName": {
   "Default": "DevPortalFeedback",
   "Description": "The name of the DynamoDB table storing feedback submitted by users.",
   "Type": "String"
  },
  "DevPortalPreLoginAccountsTableName": {
   "Default": "DevPortalPreLoginAccounts",
   "Description": "The name of the DynamoDB PreLoginAccounts table.",
   "Type": "String"
  },
  "DevPortalSiteS3BucketName": {
   "Description": "The S3 bucket in which the web application code is stored. Bucket names are globally unique, so you must change this.",
   "Type": "String"
  },
  "DevelopmentMode": {
   "AllowedValues": [
    "false",
    "true"
   ],
   "ConstraintDescription": "Malformed input - Parameter DevelopmentMode value must be either 'true' or 'false'",
   "Default": "false",
   "Description": "Enabling this weakens security features (OAI, SSL, site S3 bucket with public read ACLs, Cognito callback verification, CORS, etc.) for easier development. It also breaks frontend routing (except to /index.html), including deep linking and page refresh. Do not enable this in production! Additionally, do not update a stack that was previously in development mode to be a production stack; instead, make a new stack that has never been in development mode.",
   "Type": "String"
  },
  "EdgeLambdaRebuildToken": {
   "Default": "defaultRebuildToken",
   "Description": "Provide a token different from the last deployment's token to update the edge lambda. You can provide a timestamp or GUID on each deployment to always update it.",
   "Type": "String"
  },
  "HostedZoneName": {
   "Default": "",
   "Description": "The Route53 hosted zone name where the DNS record should be created (e.g., example.com for subdomain.example.com). If blank, uses CustomDomainName as the hosted zone.",
   "Type": "String"
  },
  "LocalDevelopmentMode": {
   "AllowedValues": [
    "false",
    "true"
   ],
   "ConstraintDescription": "Malformed input - Parameter LocalDevelopmentMode value must be either 'true' or 'false'",
   "Default": "false",
   "Description": "Enabling this disables CORS for easier local development. Do not enable this in production! Additionally, do not update a stack that was previously in development mode to be a production stack; instead, make a new stack that has never been in development mode.",
   "Type": "String"
  },
  "StaticAssetRebuildMode": {
   "AllowedValues": [
    "overwrite-content",
    ""
   ],
   "ConstraintDescription": "Malformed input - Parameter StaticAssetRebuildMode value must be either 'overwrite-content' or left blank.",
   "Default": "",
   "Description": "By default, a static asset rebuild doesn't overwrite custom-content. Provide the value `overwrite-content` to replace the custom-content with your local version. Don't do this unless you know what you're doing -- all custom changes in your s3 bucket will be lost.",
   "Type": "String"
  },
  "StaticAssetRebuildToken": {
   "Default": "defaultRebuildToken",
   "Description": "Provide a token different from the last deployment's token to re-upload the dev portal site's static assets. You can provide a timestamp or GUID on each deployment to always re-upload the assets.",
   "Type": "String"
  },
  "UseRoute53Nameservers": {
   "AllowedValues": [
    "false",
    "true"
   ],
   "ConstraintDescription": "Malformed input - Parameter UseRoute53Nameservers value must be either 'true' or 'false'",
   "Default": "false",
   "Description": "Only applicable if creating a custom domain name for your dev portal. Defaults to false, and you'll need to provide your own nameserver hosting. If set to true, a Route53 HostedZone and RecordSet are created for you.",
   "Type": "String"
  }
 },
 "Resources": {
  "ApiGatewayApi": {
   "Properties": {
    "Body": {
     "info": {
      "title": {
       "Ref": "AWS::StackName"
      },
      "version": "1.0"
     },
     "paths": {
      "/": {
       "x-amazon-apigateway-any-method": {
        "responses": {},
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "type": "aws_proxy",
         "uri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DevPortalLambdaFunction.Arn}/invocations"
         }
        }
       }
      },
      "/{proxy+}": {
       "x-amazon-apigateway-any-method": {
        "responses": {},
        "x-amazon-apigateway-integration": {
         "httpMethod": "POST",
         "type": "aws_proxy",
         "uri": {
          "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DevPortalLambdaFunction.Arn}/invocations"
         }
        }
       }
      }
     },
     "swagger": "2.0"
    }
   },
   "Type": "AWS::ApiGateway::RestApi"
  },
  "ApiGatewayApiDeploymentce028f137a": {
   "Properties": {
    "Description": "RestApi deployment id: ce028f137a67d4b3332f1caa68367f4914974de5",
    "RestApiId": {
     "Ref": "ApiGatewayApi"
    },
    "StageName": "Stage"
   },
   "Type": "AWS::ApiGateway::Deployment"
  },
  "ApiGatewayApiprodStage": {
   "Properties": {
    "DeploymentId": {
     "Ref": "ApiGatewayApiDeploymentce028f137a"
    },
    "RestApiId": {
     "Ref": "ApiGatewayApi"
    },
    "StageName": "prod",
    "Variables": {
     "DevPortalFunctionName": {
      "Ref": "DevPortalLambdaFunction"
     }
    }
   },
   "Type": "AWS::ApiGateway::Stage"
  },
  "ArtifactsS3Bucket": {
   "Properties": {
    "BucketName": {
     "Ref": "ArtifactsS3BucketName"
    },
    "NotificationConfiguration": {
     "LambdaConfigurations": [
      {
       "Event": "s3:ObjectCreated:*",
       "Filter": {
        "S3Key": {
         "Rules": [
          {
           "Name": "prefix",
           "Value": "catalog/"
          }
         ]
        }
       },
       "Function": {
        "Fn::GetAtt": [
         "CatalogUpdaterLambdaFunction",
         "Arn"
        ]
       }
      },
      {
       "Event": "s3:ObjectRemoved:*",
       "Filter": {
        "S3Key": {
         "Rules": [
          {
           "Name": "prefix",
           "Value": "catalog/"
          }
         ]
        }
       },
       "Function": {
        "Fn::GetAtt": [
         "CatalogUpdaterLambdaFunction",
         "Arn"
        ]
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "Type": "AWS::S3::Bucket"
  },
  "AssetUploaderLambdaExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:PutObjectAcl"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:ListBucket"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            }
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:DeleteObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:DeleteObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:ListBucket"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            }
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "BackendLambdaExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "apigateway:*"
         ],
         "Effect": "Allow",
         "Resource": "*"
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:DeleteObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "apigateway:GET"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:apigateway:",
            {
             "Ref": "AWS::Region"
            },
            "::/restapis/",
            {
             "Ref": "ApiGatewayApi"
            },
            "/*/exports/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:Query",
          "dynamodb:Scan",
          "dynamodb:PutItem",
          "dynamodb:UpdateItem",
          "dynamodb:DeleteItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:dynamodb:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":table/",
            {
             "Ref": "CustomersTable"
            }
           ]
          ]
         }
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:Query",
          "dynamodb:Scan",
          "dynamodb:PutItem",
          "dynamodb:UpdateItem",
          "dynamodb:DeleteItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "PreLoginAccountsTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "lambda:InvokeFunction"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CatalogUpdaterLambdaFunction",
           "Arn"
          ]
         }
        },
        {
         "Fn::If": [
          "EnableFeedbackSubmission",
          {
           "Action": [
            "dynamodb:Scan",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
           ],
           "Effect": "Allow",
           "Resource": {
            "Fn::Join": [
             "",
             [
              "arn:aws:dynamodb:",
              {
               "Ref": "AWS::Region"
              },
              ":",
              {
               "Ref": "AWS::AccountId"
              },
              ":table/",
              {
               "Ref": "FeedbackTable"
              }
             ]
            ]
           }
          },
          {
           "Ref": "AWS::NoValue"
          }
         ]
        },
        {
         "Fn::If": [
          "EnableFeedbackSubmission",
          {
           "Action": [
            "sns:Publish"
           ],
           "Effect": "Allow",
           "Resource": {
            "Ref": "FeedbackSubmittedSNSTopic"
           }
          },
          {
           "Ref": "AWS::NoValue"
          }
         ]
        },
        {
         "Action": [
          "cognito-idp:ListUsers",
          "cognito-idp:ListUsersInGroup",
          "cognito-idp:AdminAddUserToGroup",
          "cognito-idp:AdminCreateUser",
          "cognito-idp:AdminDeleteUser",
          "cognito-idp:AdminGetUser",
          "cognito-idp:AdminListGroupsForUser"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CatalogUpdaterLambdaExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "s3:ListBucket"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:s3:::",
             {
              "Ref": "ArtifactsS3BucketName"
             }
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:s3:::",
             {
              "Ref": "DevPortalSiteS3BucketName"
             }
            ]
           ]
          }
         ]
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "apigateway:*"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CatalogUpdaterLambdaFunction": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "BucketName": {
       "Ref": "ArtifactsS3BucketName"
      },
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CatalogUpdaterLambdaExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 20
   },
   "Type": "AWS::Lambda::Function"
  },
  "CatalogUpdaterLambdaPermissions": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CatalogUpdaterLambdaFunction",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CloudFrontEdgeReplicatorRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "lambda:CreateFunction",
          "lambda:GetFunction",
          "lambda:GetFunctionConfiguration",
          "lambda:UpdateFunctionCode",
          "lambda:PublishVersion"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:lambda:*:*:*"
        },
        {
         "Action": [
          "iam:PassRole"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/*"
         }
        },
        {
         "Action": [
          "s3:GetObject",
          "s3:DeleteObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:s3:::",
            {
             "Ref": "ArtifactsS3BucketName"
            },
            "/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CloudFrontOriginAccessIdentity": {
   "Condition": "NotDevelopmentMode",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": {
      "Ref": "AWS::StackName"
     }
    }
   },
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
  },
  "CloudFrontSecurityHeadersLambda": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "Bucket": {
       "Ref": "ArtifactsS3BucketName"
      }
     }
    },
    "Handler": "replicator.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CloudFrontEdgeReplicatorRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 300
   },
   "Type": "AWS::Lambda::Function"
  },
  "CloudFrontSecurityHeadersLambdaAliasLive": {
   "Properties": {
    "FunctionName": {
     "Ref": "CloudFrontSecurityHeadersLambda"
    },
    "FunctionVersion": {
     "Fn::GetAtt": [
      "CloudFrontSecurityHeadersLambdaVersionb77c1d8a42",
      "Version"
     ]
    },
    "Name": "Live"
   },
   "Type": "AWS::Lambda::Alias"
  },
  "CloudFrontSecurityHeadersLambdaVersionb77c1d8a42": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "FunctionName": {
     "Ref": "CloudFrontSecurityHeadersLambda"
    }
   },
   "Type": "AWS::Lambda::Version"
  },
  "CloudFrontSecurityHeadersSetup": {
   "Properties": {
    "Name": {
     "Ref": "CloudFrontSecurityHeadersLambda"
    },
    "RebuildToken": {
     "Ref": "EdgeLambdaRebuildToken"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "LambdaEdgeFunctionRole",
      "Arn"
     ]
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "CloudFrontSecurityHeadersLambda",
      "Arn"
     ]
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "CognitoAdminRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        },
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "CognitoIdentityPool"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:execute-api:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":",
            {
             "Ref": "ApiGatewayApi"
            },
            "/prod/*/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "CognitoAdminRole"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoAdminsGroup": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "Description": "Admin users of the developer portal",
    "GroupName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::StackName"
       },
       "AdminsGroup"
      ]
     ]
    },
    "Precedence": 0,
    "RoleArn": {
     "Fn::GetAtt": [
      "CognitoAdminRole",
      "Arn"
     ]
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::Cognito::UserPoolGroup",
   "UpdateReplacePolicy": "Retain"
  },
  "CognitoAuthenticatedRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        },
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "CognitoIdentityPool"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:execute-api:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":",
            {
             "Ref": "ApiGatewayApi"
            },
            "/prod/*/signin"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "CognitoAuthenticatedRole"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoIdentityPool": {
   "Properties": {
    "AllowUnauthenticatedIdentities": false,
    "CognitoIdentityProviders": [
     {
      "ClientId": {
       "Ref": "CognitoUserPoolClient"
      },
      "ProviderName": {
       "Fn::Join": [
        "",
        [
         "cognito-idp.",
         {
          "Ref": "AWS::Region"
         },
         ".amazonaws.com/",
         {
          "Ref": "CognitoUserPool"
         }
        ]
       ]
      }
     }
    ],
    "IdentityPoolName": {
     "Ref": "CognitoIdentityPoolName"
    }
   },
   "Type": "AWS::Cognito::IdentityPool"
  },
  "CognitoIdentityPoolRoles": {
   "Properties": {
    "IdentityPoolId": {
     "Ref": "CognitoIdentityPool"
    },
    "Roles": {
     "authenticated": {
      "Fn::GetAtt": [
       "CognitoAuthenticatedRole",
       "Arn"
      ]
     }
    }
   },
   "Type": "AWS::Cognito::IdentityPoolRoleAttachment"
  },
  "CognitoPostAuthenticationTriggerExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "dynamodb:Scan",
          "dynamodb:PutItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CustomersTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:PutItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "PreLoginAccountsTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "cognito-idp:AdminAddUserToGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoPostAuthenticationTriggerFn": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "CustomersTableName": {
       "Ref": "DevPortalCustomersTableName"
      },
      "PreLoginAccountsTableName": {
       "Ref": "DevPortalPreLoginAccountsTableName"
      },
      "RegisteredGroupName": {
       "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
      }
     }
    },
    "FunctionName": {
     "Fn::Sub": "${AWS::StackName}-CognitoPostAuthenticationTriggerFn"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoPostAuthenticationTriggerExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 3
   },
   "Type": "AWS::Lambda::Function"
  },
  "CognitoPostAuthenticationTriggerFnExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CognitoPostAuthenticationTriggerFn",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:cognito-idp:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":userpool/",
       {
        "Ref": "CognitoUserPool"
       }
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CognitoPostConfirmationTriggerExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "dynamodb:PutItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "PreLoginAccountsTable",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "cognito-idp:AdminAddUserToGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoPostConfirmationTriggerFn": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "AccountRegistrationMode": {
       "Ref": "AccountRegistrationMode"
      },
      "PreLoginAccountsTableName": {
       "Ref": "DevPortalPreLoginAccountsTableName"
      },
      "RegisteredGroupName": {
       "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
      }
     }
    },
    "FunctionName": {
     "Fn::Sub": "${AWS::StackName}-CognitoPostConfirmationTriggerFn"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoPostConfirmationTriggerExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 3
   },
   "Type": "AWS::Lambda::Function"
  },
  "CognitoPostConfirmationTriggerFnExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CognitoPostConfirmationTriggerFn",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:cognito-idp:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":userpool/",
       {
        "Ref": "CognitoUserPool"
       }
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CognitoPreSignupTriggerExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "root"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoPreSignupTriggerFn": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "AccountRegistrationMode": {
       "Ref": "AccountRegistrationMode"
      }
     }
    },
    "FunctionName": {
     "Fn::Sub": "${AWS::StackName}-CognitoPreSignupTriggerFn"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoPreSignupTriggerExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 3
   },
   "Type": "AWS::Lambda::Function"
  },
  "CognitoPreSignupTriggerFnExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CognitoPreSignupTriggerFn",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:cognito-idp:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":userpool/",
       {
        "Ref": "CognitoUserPool"
       }
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "CognitoRegisteredGroup": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "Description": "Registered users in the developer portal",
    "GroupName": {
     "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
    },
    "Precedence": 1,
    "RoleArn": {
     "Fn::GetAtt": [
      "CognitoRegisteredRole",
      "Arn"
     ]
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::Cognito::UserPoolGroup",
   "UpdateReplacePolicy": "Retain"
  },
  "CognitoRegisteredRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "authenticated"
        },
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "CognitoIdentityPool"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}/prod/*"
          }
         ]
        },
        {
         "Action": [
          "execute-api:Invoke"
         ],
         "Effect": "Deny",
         "Resource": [
          {
           "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayApi}/prod/*/admin/*"
          }
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "CognitoRegisteredRole"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoUserPool": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": {
      "Fn::If": [
       "InviteAccountRegistrationMode",
       true,
       false
      ]
     },
     "InviteMessageTemplate": {
      "EmailMessage": {
       "Fn::Join": [
        "",
        [
         "<h2>Developer Portal</h2><p>You have been invited to access the developer portal at <a href=\"",
         {
          "Fn::If": [
           "DevelopmentMode",
           {
            "Fn::Join": [
             "",
             [
              "https://",
              {
               "Fn::GetAtt": [
                "DevPortalSiteS3Bucket",
                "RegionalDomainName"
               ]
              },
              "/index.html"
             ]
            ]
           },
           {
            "Fn::If": [
             "UseCustomDomainName",
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Ref": "CustomDomainName"
                }
               ]
              ]
             },
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Fn::GetAtt": [
                  "DefaultCloudfrontDistribution",
                  "DomainName"
                 ]
                }
               ]
              ]
             }
            ]
           }
          ]
         },
         "\">",
         {
          "Fn::If": [
           "DevelopmentMode",
           {
            "Fn::Join": [
             "",
             [
              "https://",
              {
               "Fn::GetAtt": [
                "DevPortalSiteS3Bucket",
                "RegionalDomainName"
               ]
              },
              "/index.html"
             ]
            ]
           },
           {
            "Fn::If": [
             "UseCustomDomainName",
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Ref": "CustomDomainName"
                }
               ]
              ]
             },
             {
              "Fn::Join": [
               "",
               [
                "https://",
                {
                 "Fn::GetAtt": [
                  "DefaultCloudfrontDistribution",
                  "DomainName"
                 ]
                }
               ]
              ]
             }
            ]
           }
          ]
         },
         "</a>.</p><p><b>Username:</b> {username}<br><b>Temporary password:</b> {####}</p>"
        ]
       ]
      },
      "EmailSubject": "Developer Portal - Invitation"
     }
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "<h2>Developer Portal</h2><p>Your verification code is <b>{####}</b></p>",
    "EmailVerificationSubject": "Developer Portal - Verification Code",
    "LambdaConfig": {
     "PostAuthentication": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:"
        },
        {
         "Fn::Sub": "${AWS::StackName}-CognitoPostAuthenticationTriggerFn"
        }
       ]
      ]
     },
     "PostConfirmation": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:"
        },
        {
         "Fn::Sub": "${AWS::StackName}-CognitoPostConfirmationTriggerFn"
        }
       ]
      ]
     },
     "PreSignUp": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:"
        },
        {
         "Fn::Sub": "${AWS::StackName}-CognitoPreSignupTriggerFn"
        }
       ]
      ]
     }
    },
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 12,
      "RequireLowercase": true,
      "RequireNumbers": true
     }
    },
    "Schema": [
     {
      "AttributeDataType": "String",
      "Name": "email",
      "Required": true
     }
    ],
    "UserPoolName": {
     "Ref": "CognitoIdentityPoolName"
    },
    "UsernameAttributes": [
     "email"
    ]
   },
   "Type": "AWS::Cognito::UserPool",
   "UpdateReplacePolicy": "Retain"
  },
  "CognitoUserPoolClient": {
   "Properties": {
    "ClientName": "CognitoIdentityPool",
    "GenerateSecret": false,
    "PreventUserExistenceErrors": "ENABLED",
    "RefreshTokenValidity": 30,
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::Cognito::UserPoolClient"
  },
  "CognitoUserPoolClientSettings": {
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "openid"
    ],
    "CallbackURL": {
     "Fn::If": [
      "LocalDevelopmentMode",
      [
       "http://localhost:3000/index.html?action=login",
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::GetAtt": [
            "DevPortalSiteS3Bucket",
            "RegionalDomainName"
           ]
          },
          "/index.html?action=login"
         ]
        ]
       },
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=login"
         ]
        ]
       }
      ],
      [
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=login"
         ]
        ]
       }
      ]
     ]
    },
    "LogoutURL": {
     "Fn::If": [
      "LocalDevelopmentMode",
      [
       "http://localhost:3000/index.html?action=logout",
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::GetAtt": [
            "DevPortalSiteS3Bucket",
            "RegionalDomainName"
           ]
          },
          "/index.html?action=logout"
         ]
        ]
       },
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=logout"
         ]
        ]
       }
      ],
      [
       {
        "Fn::Join": [
         "",
         [
          "https://",
          {
           "Fn::If": [
            "NoCustomDomainName",
            {
             "Fn::GetAtt": [
              "DefaultCloudfrontDistribution",
              "DomainName"
             ]
            },
            {
             "Ref": "CustomDomainName"
            }
           ]
          },
          "/index.html?action=logout"
         ]
        ]
       }
      ]
     ]
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "CognitoUserPoolClientSettingsBackingFn",
      "Arn"
     ]
    },
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "Timeout": 360,
    "UserPoolClientId": {
     "Ref": "CognitoUserPoolClient"
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "CognitoUserPoolClientSettingsBackingFn": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoUserPoolClientSettingsBackingFnRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 300
   },
   "Type": "AWS::Lambda::Function"
  },
  "CognitoUserPoolClientSettingsBackingFnRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "cognito-idp:UpdateUserPoolClient",
         "Effect": "Allow",
         "Resource": "arn:aws:cognito-idp:*:*:userpool/*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "UpdateUserPoolClient"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CognitoUserPoolDomain": {
   "Properties": {
    "Domain": {
     "Ref": "CognitoDomainNameOrPrefix"
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "CognitoUserPoolDomainBackingFn",
      "Arn"
     ]
    },
    "Timeout": 360,
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "CognitoUserPoolDomainBackingFn": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "CognitoUserPoolDomainBackingFnRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 300
   },
   "Type": "AWS::Lambda::Function"
  },
  "CognitoUserPoolDomainBackingFnRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "cognito-idp:CreateUserPoolDomain",
         "Effect": "Allow",
         "Resource": "arn:aws:cognito-idp:*:*:userpool/*"
        },
        {
         "Action": "cognito-idp:DeleteUserPoolDomain",
         "Effect": "Allow",
         "Resource": "arn:aws:cognito-idp:*:*:userpool/*"
        },
        {
         "Action": "cognito-idp:DescribeUserPoolDomain",
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ManageUserPoolDomain"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "CustomDomainCloudfrontDistribution": {
   "Condition": "UseCustomDomainName",
   "DependsOn": "DevPortalSiteS3Bucket",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      {
       "Ref": "CustomDomainName"
      }
     ],
     "Comment": {
      "Fn::Sub": "${AWS::StackName} distribution"
     },
     "CustomErrorResponses": [
      {
       "ErrorCode": 403,
       "ResponseCode": 403,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "ForwardedValues": {
       "QueryString": true
      },
      "LambdaFunctionAssociations": [
       {
        "EventType": "origin-response",
        "LambdaFunctionARN": {
         "Fn::GetAtt": [
          "CloudFrontSecurityHeadersSetup",
          "EdgeArn"
         ]
        }
       }
      ],
      "TargetOriginId": "dev-portal-site-s3-bucket",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::If": [
         "InUSEastOne",
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3.amazonaws.com"
           ]
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3-",
            {
             "Ref": "AWS::Region"
            },
            ".amazonaws.com"
           ]
          ]
         }
        ]
       },
       "Id": "dev-portal-site-s3-bucket",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Sub": "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        }
       }
      }
     ],
     "ViewerCertificate": {
      "AcmCertificateArn": {
       "Ref": "CustomDomainNameAcmCertArn"
      },
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "Type": "AWS::CloudFront::Distribution"
  },
  "CustomDomainDistributionAccessIdentity": {
   "Condition": "UseCustomDomainName",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": {
      "Fn::Sub": "CloudFront OAI for ${CustomDomainName}"
     }
    }
   },
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
  },
  "CustomDomainHostedZone": {
   "Condition": "UseRoute53",
   "Properties": {
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "CustomDomainName"
       },
       "."
      ]
     ]
    }
   },
   "Type": "AWS::Route53::HostedZone"
  },
  "CustomDomainRecordSet": {
   "Condition": "UseRoute53",
   "Properties": {
    "HostedZoneName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "CustomDomainName"
       },
       "."
      ]
     ]
    },
    "RecordSets": [
     {
      "AliasTarget": {
       "DNSName": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "CustomDomainCloudfrontDistribution",
            "DomainName"
           ]
          },
          "."
         ]
        ]
       },
       "HostedZoneId": "Z2FDTNDATAQYW2"
      },
      "Name": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "CustomDomainName"
         },
         "."
        ]
       ]
      },
      "Type": "A"
     }
    ]
   },
   "Type": "AWS::Route53::RecordSetGroup"
  },
  "CustomersTable": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "Id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "Id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": {
     "Ref": "DevPortalCustomersTableName"
    }
   },
   "Type": "AWS::DynamoDB::Table",
   "UpdateReplacePolicy": "Retain"
  },
  "DefaultCloudfrontDistribution": {
   "Condition": "NoCustomDomainName",
   "Properties": {
    "DistributionConfig": {
     "Comment": {
      "Fn::Sub": "${AWS::StackName} distribution"
     },
     "CustomErrorResponses": [
      {
       "ErrorCode": 403,
       "ResponseCode": 403,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "ForwardedValues": {
       "QueryString": true
      },
      "LambdaFunctionAssociations": [
       {
        "EventType": "origin-response",
        "LambdaFunctionARN": {
         "Fn::GetAtt": [
          "CloudFrontSecurityHeadersSetup",
          "EdgeArn"
         ]
        }
       }
      ],
      "TargetOriginId": "dev-portal-site-s3-bucket",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::If": [
         "InUSEastOne",
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3.amazonaws.com"
           ]
          ]
         },
         {
          "Fn::Join": [
           "",
           [
            {
             "Ref": "DevPortalSiteS3BucketName"
            },
            ".s3-",
            {
             "Ref": "AWS::Region"
            },
            ".amazonaws.com"
           ]
          ]
         }
        ]
       },
       "Id": "dev-portal-site-s3-bucket",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Sub": "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        }
       }
      }
     ]
    }
   },
   "Type": "AWS::CloudFront::Distribution"
  },
  "DevPortalLambdaFunction": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "AdminsGroupName": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "AWS::StackName"
         },
         "AdminsGroup"
        ]
       ]
      },
      "CatalogUpdaterFunctionArn": {
       "Fn::GetAtt": [
        "CatalogUpdaterLambdaFunction",
        "Arn"
       ]
      },
      "CustomersTableName": {
       "Ref": "DevPortalCustomersTableName"
      },
      "DevelopmentMode": {
       "Ref": "DevelopmentMode"
      },
      "FeedbackSnsTopicArn": {
       "Fn::If": [
        "EnableFeedbackSubmission",
        {
         "Ref": "FeedbackSubmittedSNSTopic"
        },
        ""
       ]
      },
      "FeedbackTableName": {
       "Ref": "DevPortalFeedbackTableName"
      },
      "NODE_ENV": "production",
      "PreLoginAccountsTableName": {
       "Ref": "DevPortalPreLoginAccountsTableName"
      },
      "RegisteredGroupName": {
       "Fn::Sub": "${AWS::StackName}-RegisteredGroup"
      },
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      },
      "StaticBucketName": {
       "Ref": "ArtifactsS3BucketName"
      },
      "UserPoolId": {
       "Ref": "CognitoUserPool"
      },
      "WEBSITE_BUCKET_NAME": {
       "Ref": "DevPortalSiteS3BucketName"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "BackendLambdaExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 30
   },
   "Type": "AWS::Lambda::Function"
  },
  "DevPortalLambdaFunctionProxyApiGreedyPermissionprod": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Ref": "DevPortalLambdaFunction"
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Sub": [
      "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/*",
      {
       "__ApiId__": {
        "Ref": "ApiGatewayApi"
       },
       "__Stage__": "*"
      }
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "DevPortalLambdaFunctionProxyApiRootPermissionprod": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Ref": "DevPortalLambdaFunction"
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Sub": [
      "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/",
      {
       "__ApiId__": {
        "Ref": "ApiGatewayApi"
       },
       "__Stage__": "*"
      }
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "DevPortalSiteS3Bucket": {
   "Properties": {
    "BucketName": {
     "Ref": "DevPortalSiteS3BucketName"
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "Type": "AWS::S3::Bucket"
  },
  "DevPortalSiteS3BucketPolicy": {
   "Condition": "NotDevelopmentMode",
   "Properties": {
    "Bucket": {
     "Ref": "DevPortalSiteS3Bucket"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Sub": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"
        }
       },
       "Resource": {
        "Fn::Sub": "arn:aws:s3:::${DevPortalSiteS3Bucket}/*"
       }
      }
     ]
    }
   },
   "Type": "AWS::S3::BucketPolicy"
  },
  "DumpV3AccountDataExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "dynamodb:Scan",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CustomersTable",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ReadCustomersTable"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "cognito-idp:ListUsers",
          "cognito-idp:ListUsersInGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ListUserPool"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "DumpV3AccountDataFn": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "AdminsGroupName": {
       "Ref": "CognitoAdminsGroup"
      },
      "CustomersTableName": {
       "Ref": "DevPortalCustomersTableName"
      },
      "UserPoolId": {
       "Ref": "CognitoUserPool"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "DumpV3AccountDataExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 300
   },
   "Type": "AWS::Lambda::Function"
  },
  "FeedbackSubmittedSNSTopic": {
   "Condition": "EnableFeedbackSubmission",
   "Properties": {
    "Subscription": [
     {
      "Endpoint": {
       "Ref": "DevPortalAdminEmail"
      },
      "Protocol": "email"
     }
    ]
   },
   "Type": "AWS::SNS::Topic"
  },
  "FeedbackTable": {
   "Condition": "EnableFeedbackSubmission",
   "DeletionPolicy": "Retain",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "Id",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "FeedbackIdIndex",
      "KeySchema": [
       {
        "AttributeName": "Id",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "KEYS_ONLY"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "Id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": {
     "Ref": "DevPortalFeedbackTableName"
    }
   },
   "Type": "AWS::DynamoDB::Table",
   "UpdateReplacePolicy": "Retain"
  },
  "LambdaApiGatewayExecutionPermission": {
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DevPortalLambdaFunction",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ApiGatewayApi"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Type": "AWS::Lambda::Permission"
  },
  "LambdaCommonLayer21f0ec523f": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "CompatibleRuntimes": [
     "nodejs16.x"
    ],
    "Content": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Description": "Common code used by lambdas",
    "LayerName": "LambdaCommonLayer"
   },
   "Type": "AWS::Lambda::LayerVersion"
  },
  "LambdaEdgeFunctionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "lambda.amazonaws.com",
         "edgelambda.amazonaws.com"
        ]
       },
       "Sid": "AllowLambdaServiceToAssumeRole"
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    ],
    "Path": "/"
   },
   "Type": "AWS::IAM::Role"
  },
  "PreLoginAccountsTable": {
   "DeletionPolicy": "Retain",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "UserId",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "UserId",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": {
     "Ref": "DevPortalPreLoginAccountsTableName"
    }
   },
   "Type": "AWS::DynamoDB::Table",
   "UpdateReplacePolicy": "Retain"
  },
  "StaticAssetUploader": {
   "DependsOn": "ArtifactsS3Bucket",
   "Properties": {
    "BucketName": {
     "Ref": "DevPortalSiteS3Bucket"
    },
    "DevelopmentMode": {
     "Ref": "DevelopmentMode"
    },
    "FeedbackEnabled": {
     "Fn::If": [
      "EnableFeedbackSubmission",
      "true",
      "false"
     ]
    },
    "IdentityPoolId": {
     "Ref": "CognitoIdentityPool"
    },
    "RebuildMode": {
     "Ref": "StaticAssetRebuildMode"
    },
    "RebuildToken": {
     "Ref": "StaticAssetRebuildToken"
    },
    "Region": {
     "Ref": "AWS::Region"
    },
    "RestApiId": {
     "Ref": "ApiGatewayApi"
    },
    "ServiceToken": {
     "Fn::GetAtt": [
      "StaticAssetUploaderLambdaFunction",
      "Arn"
     ]
    },
    "UserPoolClientId": {
     "Ref": "CognitoUserPoolClient"
    },
    "UserPoolDomain": {
     "Fn::GetAtt": [
      "CognitoUserPoolDomain",
      "FullUrl"
     ]
    },
    "UserPoolId": {
     "Ref": "CognitoUserPool"
    }
   },
   "Type": "AWS::CloudFormation::CustomResource"
  },
  "StaticAssetUploaderLambdaFunction": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      },
      "StaticBucketName": {
       "Ref": "ArtifactsS3BucketName"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "LambdaCommonLayer21f0ec523f"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "AssetUploaderLambdaExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 300
   },
   "Type": "AWS::Lambda::Function"
  },
  "SubdomainDelegationRecords": {
   "Condition": {
    "Fn::And": [
     {
      "Condition": "UseRoute53"
     },
     {
      "Condition": "UseCustomHostedZone"
     }
    ]
   },
   "Properties": {
    "HostedZoneName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "HostedZoneName"
       },
       "."
      ]
     ]
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "CustomDomainName"
       },
       "."
      ]
     ]
    },
    "ResourceRecords": {
     "Fn::GetAtt": [
      "CustomDomainHostedZone",
      "NameServers"
     ]
    },
    "TTL": 300,
    "Type": "NS"
   },
   "Type": "AWS::Route53::RecordSet"
  },
  "UserGroupImporter": {
   "Properties": {
    "Code": {
     "S3Bucket": "bucket",
     "S3Key": "value"
    },
    "Environment": {
     "Variables": {
      "AdminsGroup": {
       "Ref": "CognitoAdminsGroup"
      },
      "CustomersTable": {
       "Ref": "CustomersTable"
      },
      "FeedbackTable": {
       "Fn::If": [
        "EnableFeedbackSubmission",
        {
         "Ref": "FeedbackTable"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      "RegisteredGroup": {
       "Ref": "CognitoRegisteredGroup"
      },
      "SourceAccount": {
       "Ref": "AWS::AccountId"
      },
      "UserPoolId": {
       "Ref": "CognitoUserPool"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "UserGroupImporterExecutionRole",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "lambda:createdBy",
      "Value": "SAM"
     }
    ],
    "Timeout": 900
   },
   "Type": "AWS::Lambda::Function"
  },
  "UserGroupImporterExecutionRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": {
      "Action": "sts:AssumeRole",
      "Effect": "Allow",
      "Principal": {
       "Service": "lambda.amazonaws.com"
      }
     },
     "Version": "2012-10-17"
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "WriteCloudWatchLogs"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "s3:getObject",
         "Effect": "Allow",
         "Resource": "arn:aws:s3:::*/*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "S3GetObject"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "dynamodb:Scan"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::If": [
           "EnableFeedbackSubmission",
           [
            {
             "Fn::GetAtt": [
              "CustomersTable",
              "Arn"
             ]
            },
            {
             "Fn::GetAtt": [
              "FeedbackTable",
              "Arn"
             ]
            }
           ],
           [
            {
             "Fn::GetAtt": [
              "CustomersTable",
              "Arn"
             ]
            }
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "RestoreTables"
     },
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "cognito-idp:AdminCreateUser",
          "cognito-idp:AdminAddUserToGroup"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "CognitoUserPool",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "UpdateCognitoUserList"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  }
 }
}
2025-07-29 18:58:32 Starting match function for rule W1100 at 2025-07-29 18:58:32.075831
2025-07-29 18:58:32 Complete match function for rule W1100 at 2025-07-29 18:58:32.075831.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E8004 at 2025-07-29 18:58:32.075831
2025-07-29 18:58:32 Complete match function for rule E8004 at 2025-07-29 18:58:32.075831.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E8007 at 2025-07-29 18:58:32.075831
2025-07-29 18:58:32 Complete match function for rule E8007 at 2025-07-29 18:58:32.076832.  Ran in 0:00:00.001001
2025-07-29 18:58:32 Starting match function for rule E8001 at 2025-07-29 18:58:32.076832
2025-07-29 18:58:32 Complete match function for rule E8001 at 2025-07-29 18:58:32.076832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E8003 at 2025-07-29 18:58:32.076832
2025-07-29 18:58:32 Complete match function for rule E8003 at 2025-07-29 18:58:32.076832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W8003 at 2025-07-29 18:58:32.076832
2025-07-29 18:58:32 Complete match function for rule W8003 at 2025-07-29 18:58:32.076832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E8002 at 2025-07-29 18:58:32.076832
2025-07-29 18:58:32 Complete match function for rule E8002 at 2025-07-29 18:58:32.076832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E8005 at 2025-07-29 18:58:32.076832
2025-07-29 18:58:32 Complete match function for rule E8005 at 2025-07-29 18:58:32.076832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E8006 at 2025-07-29 18:58:32.076832
2025-07-29 18:58:32 Complete match function for rule E8006 at 2025-07-29 18:58:32.076832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W8001 at 2025-07-29 18:58:32.076832
2025-07-29 18:58:32 Complete match function for rule W8001 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00.001000
2025-07-29 18:58:32 Starting match function for rule E0003 at 2025-07-29 18:58:32.077832
2025-07-29 18:58:32 Complete match function for rule E0003 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E0000 at 2025-07-29 18:58:32.077832
2025-07-29 18:58:32 Complete match function for rule E0000 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E0002 at 2025-07-29 18:58:32.077832
2025-07-29 18:58:32 Complete match function for rule E0002 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E0001 at 2025-07-29 18:58:32.077832
2025-07-29 18:58:32 Complete match function for rule E0001 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1103 at 2025-07-29 18:58:32.077832
2025-07-29 18:58:32 Complete match function for rule E1103 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1156 at 2025-07-29 18:58:32.077832
2025-07-29 18:58:32 Complete match function for rule E1156 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1152 at 2025-07-29 18:58:32.077832
2025-07-29 18:58:32 Complete match function for rule E1152 at 2025-07-29 18:58:32.077832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1155 at 2025-07-29 18:58:32.078832
2025-07-29 18:58:32 Complete match function for rule E1155 at 2025-07-29 18:58:32.078832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1150 at 2025-07-29 18:58:32.078832
2025-07-29 18:58:32 Complete match function for rule E1150 at 2025-07-29 18:58:32.078832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1153 at 2025-07-29 18:58:32.078832
2025-07-29 18:58:32 Complete match function for rule E1153 at 2025-07-29 18:58:32.078832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1154 at 2025-07-29 18:58:32.078832
2025-07-29 18:58:32 Complete match function for rule E1154 at 2025-07-29 18:58:32.078832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1151 at 2025-07-29 18:58:32.078832
2025-07-29 18:58:32 Complete match function for rule E1151 at 2025-07-29 18:58:32.079832.  Ran in 0:00:00.001000
2025-07-29 18:58:32 Starting match function for rule E1021 at 2025-07-29 18:58:32.079832
2025-07-29 18:58:32 Complete match function for rule E1021 at 2025-07-29 18:58:32.079832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1024 at 2025-07-29 18:58:32.079832
2025-07-29 18:58:32 Complete match function for rule E1024 at 2025-07-29 18:58:32.079832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1050 at 2025-07-29 18:58:32.079832
2025-07-29 18:58:32 Complete match function for rule E1050 at 2025-07-29 18:58:32.079832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1051 at 2025-07-29 18:58:32.079832
2025-07-29 18:58:32 Complete match function for rule W1051 at 2025-07-29 18:58:32.079832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1051 at 2025-07-29 18:58:32.079832
2025-07-29 18:58:32 Complete match function for rule E1051 at 2025-07-29 18:58:32.079832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1027 at 2025-07-29 18:58:32.079832
2025-07-29 18:58:32 Complete match function for rule E1027 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00.001001
2025-07-29 18:58:32 Starting match function for rule E1052 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule E1052 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1011 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule E1011 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1034 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule W1034 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1032 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule E1032 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1010 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule E1010 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1040 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule E1040 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1015 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule E1015 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1036 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule W1036 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1028 at 2025-07-29 18:58:32.080833
2025-07-29 18:58:32 Complete match function for rule E1028 at 2025-07-29 18:58:32.080833.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1028 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule W1028 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1016 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule E1016 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1022 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule E1022 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1032 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule W1032 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1030 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule E1030 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1020 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule E1020 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1041 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule E1041 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1030 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule W1030 at 2025-07-29 18:58:32.081832.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1001 at 2025-07-29 18:58:32.081832
2025-07-29 18:58:32 Complete match function for rule W1001 at 2025-07-29 18:58:32.134726.  Ran in 0:00:00.052894
2025-07-29 18:58:32 Starting match function for rule E1017 at 2025-07-29 18:58:32.134726
2025-07-29 18:58:32 Complete match function for rule E1017 at 2025-07-29 18:58:32.134726.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1035 at 2025-07-29 18:58:32.134726
2025-07-29 18:58:32 Complete match function for rule W1035 at 2025-07-29 18:58:32.134726.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1018 at 2025-07-29 18:58:32.134726
2025-07-29 18:58:32 Complete match function for rule E1018 at 2025-07-29 18:58:32.134726.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1033 at 2025-07-29 18:58:32.134726
2025-07-29 18:58:32 Complete match function for rule W1033 at 2025-07-29 18:58:32.134726.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1019 at 2025-07-29 18:58:32.134726
2025-07-29 18:58:32 Complete match function for rule E1019 at 2025-07-29 18:58:32.134726.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1029 at 2025-07-29 18:58:32.134726
2025-07-29 18:58:32 Complete match function for rule E1029 at 2025-07-29 18:58:32.189574.  Ran in 0:00:00.054848
2025-07-29 18:58:32 Starting match function for rule I1022 at 2025-07-29 18:58:32.189574
2025-07-29 18:58:32 Complete match function for rule I1022 at 2025-07-29 18:58:32.189574.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1019 at 2025-07-29 18:58:32.189574
2025-07-29 18:58:32 Complete match function for rule W1019 at 2025-07-29 18:58:32.189574.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1031 at 2025-07-29 18:58:32.189574
2025-07-29 18:58:32 Complete match function for rule W1031 at 2025-07-29 18:58:32.189574.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule W1020 at 2025-07-29 18:58:32.189574
2025-07-29 18:58:32 Complete match function for rule W1020 at 2025-07-29 18:58:32.189574.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1031 at 2025-07-29 18:58:32.189574
2025-07-29 18:58:32 Complete match function for rule E1031 at 2025-07-29 18:58:32.190573.  Ran in 0:00:00.000999
2025-07-29 18:58:32 Starting match function for rule W1040 at 2025-07-29 18:58:32.190573
2025-07-29 18:58:32 Complete match function for rule W1040 at 2025-07-29 18:58:32.190573.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1101 at 2025-07-29 18:58:32.190573
2025-07-29 18:58:32 Complete match function for rule E1101 at 2025-07-29 18:58:32.190573.  Ran in 0:00:00
2025-07-29 18:58:32 Starting match function for rule E1001 at 2025-07-29 18:58:32.190573
2025-07-29 18:58:33 Complete match function for rule E1001 at 2025-07-29 18:58:33.082739.  Ran in 0:00:00.892166
2025-07-29 18:58:33 Starting match function for rule I7002 at 2025-07-29 18:58:33.082739
2025-07-29 18:58:33 Complete match function for rule I7002 at 2025-07-29 18:58:33.082739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I7010 at 2025-07-29 18:58:33.082739
2025-07-29 18:58:33 Complete match function for rule I7010 at 2025-07-29 18:58:33.082739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E7001 at 2025-07-29 18:58:33.082739
2025-07-29 18:58:33 Complete match function for rule E7001 at 2025-07-29 18:58:33.082739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E7002 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule E7002 at 2025-07-29 18:58:33.083739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E7010 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule E7010 at 2025-07-29 18:58:33.083739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W7001 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule W7001 at 2025-07-29 18:58:33.083739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W4005 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule W4005 at 2025-07-29 18:58:33.083739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E4002 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule E4002 at 2025-07-29 18:58:33.083739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E4001 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule E4001 at 2025-07-29 18:58:33.083739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W4001 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule W4001 at 2025-07-29 18:58:33.083739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I6011 at 2025-07-29 18:58:33.083739
2025-07-29 18:58:33 Complete match function for rule I6011 at 2025-07-29 18:58:33.084739.  Ran in 0:00:00.001000
2025-07-29 18:58:33 Starting match function for rule I6010 at 2025-07-29 18:58:33.084739
2025-07-29 18:58:33 Complete match function for rule I6010 at 2025-07-29 18:58:33.084739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6005 at 2025-07-29 18:58:33.084739
2025-07-29 18:58:33 Complete match function for rule E6005 at 2025-07-29 18:58:33.084739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6001 at 2025-07-29 18:58:33.084739
2025-07-29 18:58:33 Complete match function for rule E6001 at 2025-07-29 18:58:33.084739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6102 at 2025-07-29 18:58:33.084739
2025-07-29 18:58:33 Complete match function for rule E6102 at 2025-07-29 18:58:33.084739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W6001 at 2025-07-29 18:58:33.084739
2025-07-29 18:58:33 Complete match function for rule W6001 at 2025-07-29 18:58:33.084739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6011 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule E6011 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6010 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule E6010 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6004 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule E6004 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6002 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule E6002 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6003 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule E6003 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E6101 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule E6101 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I2003 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule I2003 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I2011 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule I2011 at 2025-07-29 18:58:33.085739.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I2010 at 2025-07-29 18:58:33.085739
2025-07-29 18:58:33 Complete match function for rule I2010 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00.001051
2025-07-29 18:58:33 Starting match function for rule E2001 at 2025-07-29 18:58:33.086790
2025-07-29 18:58:33 Complete match function for rule E2001 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2015 at 2025-07-29 18:58:33.086790
2025-07-29 18:58:33 Complete match function for rule E2015 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W1011 at 2025-07-29 18:58:33.086790
2025-07-29 18:58:33 Complete match function for rule W1011 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2030 at 2025-07-29 18:58:33.086790
2025-07-29 18:58:33 Complete match function for rule W2030 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2010 at 2025-07-29 18:58:33.086790
2025-07-29 18:58:33 Complete match function for rule E2010 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2010 at 2025-07-29 18:58:33.086790
2025-07-29 18:58:33 Complete match function for rule W2010 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3034 at 2025-07-29 18:58:33.086790
2025-07-29 18:58:33 Complete match function for rule W3034 at 2025-07-29 18:58:33.086790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2003 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule E2003 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2011 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule E2011 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2002 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule E2002 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2001 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule W2001 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2031 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule W2031 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I3012 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule I3012 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I3010 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule I3010 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3011 at 2025-07-29 18:58:33.087789
2025-07-29 18:58:33 Complete match function for rule W3011 at 2025-07-29 18:58:33.087789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3009 at 2025-07-29 18:58:33.088789
2025-07-29 18:58:33 Complete match function for rule E3009 at 2025-07-29 18:58:33.088789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3004 at 2025-07-29 18:58:33.088789
2025-07-29 18:58:33 Complete match function for rule E3004 at 2025-07-29 18:58:33.091790.  Ran in 0:00:00.003001
2025-07-29 18:58:33 Starting match function for rule E3015 at 2025-07-29 18:58:33.091790
2025-07-29 18:58:33 Complete match function for rule E3015 at 2025-07-29 18:58:33.091790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3001 at 2025-07-29 18:58:33.091790
2025-07-29 18:58:33 Complete match function for rule E3001 at 2025-07-29 18:58:33.091790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3055 at 2025-07-29 18:58:33.091790
2025-07-29 18:58:33 Complete match function for rule E3055 at 2025-07-29 18:58:33.091790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3035 at 2025-07-29 18:58:33.091790
2025-07-29 18:58:33 Complete match function for rule E3035 at 2025-07-29 18:58:33.092789.  Ran in 0:00:00.000999
2025-07-29 18:58:33 Starting match function for rule E3005 at 2025-07-29 18:58:33.092789
2025-07-29 18:58:33 Complete match function for rule E3005 at 2025-07-29 18:58:33.092789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3005 at 2025-07-29 18:58:33.092789
2025-07-29 18:58:33 Complete match function for rule W3005 at 2025-07-29 18:58:33.092789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I3042 at 2025-07-29 18:58:33.092789
2025-07-29 18:58:33 Complete match function for rule I3042 at 2025-07-29 18:58:33.092789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3010 at 2025-07-29 18:58:33.092789
2025-07-29 18:58:33 Complete match function for rule E3010 at 2025-07-29 18:58:33.092789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3028 at 2025-07-29 18:58:33.092789
2025-07-29 18:58:33 Complete match function for rule E3028 at 2025-07-29 18:58:33.092789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E5001 at 2025-07-29 18:58:33.092789
2025-07-29 18:58:33 Complete match function for rule E5001 at 2025-07-29 18:58:33.093789.  Ran in 0:00:00.001000
2025-07-29 18:58:33 Starting match function for rule I3100 at 2025-07-29 18:58:33.093789
2025-07-29 18:58:33 Complete match function for rule I3100 at 2025-07-29 18:58:33.093789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3019 at 2025-07-29 18:58:33.093789
2025-07-29 18:58:33 Complete match function for rule E3019 at 2025-07-29 18:58:33.096790.  Ran in 0:00:00.003001
2025-07-29 18:58:33 Starting match function for rule E3011 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule E3011 at 2025-07-29 18:58:33.097788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3006 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule E3006 at 2025-07-29 18:58:33.097788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I3013 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule I3013 at 2025-07-29 18:58:33.097788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3038 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule E3038 at 2025-07-29 18:58:33.097788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3007 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule E3007 at 2025-07-29 18:58:33.097788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3036 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule E3036 at 2025-07-29 18:58:33.097788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I3011 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule I3011 at 2025-07-29 18:58:33.097788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3670 at 2025-07-29 18:58:33.097788
2025-07-29 18:58:33 Complete match function for rule E3670 at 2025-07-29 18:58:33.098790.  Ran in 0:00:00.001002
2025-07-29 18:58:33 Starting match function for rule W3660 at 2025-07-29 18:58:33.098790
2025-07-29 18:58:33 Complete match function for rule W3660 at 2025-07-29 18:58:33.098790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3660 at 2025-07-29 18:58:33.098790
2025-07-29 18:58:33 Complete match function for rule E3660 at 2025-07-29 18:58:33.098790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3621 at 2025-07-29 18:58:33.098790
2025-07-29 18:58:33 Complete match function for rule E3621 at 2025-07-29 18:58:33.098790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3504 at 2025-07-29 18:58:33.098790
2025-07-29 18:58:33 Complete match function for rule E3504 at 2025-07-29 18:58:33.098790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3503 at 2025-07-29 18:58:33.098790
2025-07-29 18:58:33 Complete match function for rule E3503 at 2025-07-29 18:58:33.098790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3043 at 2025-07-29 18:58:33.098790
2025-07-29 18:58:33 Complete match function for rule E3043 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00.000999
2025-07-29 18:58:33 Starting match function for rule E3013 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3013 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3057 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3057 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3615 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3615 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3636 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3636 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3703 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3703 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3702 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3702 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3701 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3701 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3700 at 2025-07-29 18:58:33.099789
2025-07-29 18:58:33 Complete match function for rule E3700 at 2025-07-29 18:58:33.099789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3672 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3672 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3620 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3620 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3039 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3039 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3638 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3638 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3639 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3639 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3047 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3047 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3044 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3044 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3046 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3046 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3049 at 2025-07-29 18:58:33.100789
2025-07-29 18:58:33 Complete match function for rule E3049 at 2025-07-29 18:58:33.100789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3054 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3054 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3056 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3056 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3052 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3052 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3053 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3053 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3042 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3042 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3048 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3048 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3671 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3671 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3673 at 2025-07-29 18:58:33.101788
2025-07-29 18:58:33 Complete match function for rule E3673 at 2025-07-29 18:58:33.101788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3628 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule E3628 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3674 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule E3674 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3022 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule E3022 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3688 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule E3688 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3687 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule W3687 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3687 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule E3687 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3059 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule E3059 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3060 at 2025-07-29 18:58:33.102789
2025-07-29 18:58:33 Complete match function for rule E3060 at 2025-07-29 18:58:33.102789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3647 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3647 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3695 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3695 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3026 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3026 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3676 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3676 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3680 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3680 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3684 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3684 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3683 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3683 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3681 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3681 at 2025-07-29 18:58:33.103788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3652 at 2025-07-29 18:58:33.103788
2025-07-29 18:58:33 Complete match function for rule E3652 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00.001001
2025-07-29 18:58:33 Starting match function for rule E3679 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule E3679 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3675 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule E3675 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3027 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule E3027 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3641 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule E3641 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3510 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule E3510 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3037 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule W3037 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2511 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule W2511 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3050 at 2025-07-29 18:58:33.104789
2025-07-29 18:58:33 Complete match function for rule E3050 at 2025-07-29 18:58:33.104789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3513 at 2025-07-29 18:58:33.105789
2025-07-29 18:58:33 Complete match function for rule E3513 at 2025-07-29 18:58:33.105789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3512 at 2025-07-29 18:58:33.105789
2025-07-29 18:58:33 Complete match function for rule E3512 at 2025-07-29 18:58:33.105789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3514 at 2025-07-29 18:58:33.105789
2025-07-29 18:58:33 Complete match function for rule E3514 at 2025-07-29 18:58:33.105789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3511 at 2025-07-29 18:58:33.105789
2025-07-29 18:58:33 Complete match function for rule E3511 at 2025-07-29 18:58:33.105789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I3510 at 2025-07-29 18:58:33.105789
2025-07-29 18:58:33 Complete match function for rule I3510 at 2025-07-29 18:58:33.105789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2531 at 2025-07-29 18:58:33.105789
2025-07-29 18:58:33 Complete match function for rule E2531 at 2025-07-29 18:58:33.105789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2531 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule W2531 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2533 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule E2533 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2529 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule E2529 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3634 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule E3634 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3633 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule E3633 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3505 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule E3505 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3663 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule E3663 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3677 at 2025-07-29 18:58:33.106789
2025-07-29 18:58:33 Complete match function for rule E3677 at 2025-07-29 18:58:33.106789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3678 at 2025-07-29 18:58:33.107789
2025-07-29 18:58:33 Complete match function for rule E3678 at 2025-07-29 18:58:33.107789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3663 at 2025-07-29 18:58:33.107789
2025-07-29 18:58:33 Complete match function for rule W3663 at 2025-07-29 18:58:33.107789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2530 at 2025-07-29 18:58:33.107789
2025-07-29 18:58:33 Complete match function for rule W2530 at 2025-07-29 18:58:33.107789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I2530 at 2025-07-29 18:58:33.107789
2025-07-29 18:58:33 Complete match function for rule I2530 at 2025-07-29 18:58:33.107789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E2530 at 2025-07-29 18:58:33.107789
2025-07-29 18:58:33 Complete match function for rule E2530 at 2025-07-29 18:58:33.107789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2533 at 2025-07-29 18:58:33.107789
2025-07-29 18:58:33 Complete match function for rule W2533 at 2025-07-29 18:58:33.108790.  Ran in 0:00:00.001001
2025-07-29 18:58:33 Starting match function for rule E3617 at 2025-07-29 18:58:33.108790
2025-07-29 18:58:33 Complete match function for rule E3617 at 2025-07-29 18:58:33.108790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3635 at 2025-07-29 18:58:33.108790
2025-07-29 18:58:33 Complete match function for rule E3635 at 2025-07-29 18:58:33.108790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3017 at 2025-07-29 18:58:33.108790
2025-07-29 18:58:33 Complete match function for rule E3017 at 2025-07-29 18:58:33.108790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3032 at 2025-07-29 18:58:33.108790
2025-07-29 18:58:33 Complete match function for rule E3032 at 2025-07-29 18:58:33.108790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3010 at 2025-07-29 18:58:33.108790
2025-07-29 18:58:33 Complete match function for rule W3010 at 2025-07-29 18:58:33.108790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3020 at 2025-07-29 18:58:33.108790
2025-07-29 18:58:33 Complete match function for rule E3020 at 2025-07-29 18:58:33.108790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3021 at 2025-07-29 18:58:33.109788
2025-07-29 18:58:33 Complete match function for rule E3021 at 2025-07-29 18:58:33.109788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3030 at 2025-07-29 18:58:33.109788
2025-07-29 18:58:33 Complete match function for rule E3030 at 2025-07-29 18:58:33.109788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2506 at 2025-07-29 18:58:33.109788
2025-07-29 18:58:33 Complete match function for rule W2506 at 2025-07-29 18:58:33.109788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3034 at 2025-07-29 18:58:33.109788
2025-07-29 18:58:33 Complete match function for rule E3034 at 2025-07-29 18:58:33.109788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3018 at 2025-07-29 18:58:33.109788
2025-07-29 18:58:33 Complete match function for rule E3018 at 2025-07-29 18:58:33.109788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W2501 at 2025-07-29 18:58:33.109788
2025-07-29 18:58:33 Complete match function for rule W2501 at 2025-07-29 18:58:33.114789.  Ran in 0:00:00.005001
2025-07-29 18:58:33 Starting match function for rule E3031 at 2025-07-29 18:58:33.114789
2025-07-29 18:58:33 Complete match function for rule E3031 at 2025-07-29 18:58:33.114789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3008 at 2025-07-29 18:58:33.114789
2025-07-29 18:58:33 Complete match function for rule E3008 at 2025-07-29 18:58:33.114789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3002 at 2025-07-29 18:58:33.114789
2025-07-29 18:58:33 Complete match function for rule E3002 at 2025-07-29 18:58:33.114789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3002 at 2025-07-29 18:58:33.114789
2025-07-29 18:58:33 Complete match function for rule W3002 at 2025-07-29 18:58:33.114789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3040 at 2025-07-29 18:58:33.114789
2025-07-29 18:58:33 Complete match function for rule E3040 at 2025-07-29 18:58:33.114789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3003 at 2025-07-29 18:58:33.114789
2025-07-29 18:58:33 Complete match function for rule E3003 at 2025-07-29 18:58:33.114789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3058 at 2025-07-29 18:58:33.114789
2025-07-29 18:58:33 Complete match function for rule E3058 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00.001000
2025-07-29 18:58:33 Starting match function for rule E3014 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule E3014 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3033 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule E3033 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3024 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule E3024 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3012 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule E3012 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3037 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule E3037 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I3037 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule I3037 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3693 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule E3693 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3693 at 2025-07-29 18:58:33.115789
2025-07-29 18:58:33 Complete match function for rule W3693 at 2025-07-29 18:58:33.115789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3690 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule E3690 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3694 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule E3694 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3689 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule E3689 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3692 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule E3692 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3686 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule E3686 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3688 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule W3688 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3689 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule W3689 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3682 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule E3682 at 2025-07-29 18:58:33.116789.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3025 at 2025-07-29 18:58:33.116789
2025-07-29 18:58:33 Complete match function for rule E3025 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00.000999
2025-07-29 18:58:33 Starting match function for rule E3062 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3062 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3691 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3691 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3667 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3667 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3661 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3661 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3023 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3023 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3029 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3029 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3041 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3041 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule W3045 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule W3045 at 2025-07-29 18:58:33.117788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3045 at 2025-07-29 18:58:33.117788
2025-07-29 18:58:33 Complete match function for rule E3045 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00.001000
2025-07-29 18:58:33 Starting match function for rule E3061 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E3061 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3502 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E3502 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3501 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E3501 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3051 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E3051 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3601 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E3601 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3016 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E3016 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E1701 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E1701 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E1700 at 2025-07-29 18:58:33.118788
2025-07-29 18:58:33 Complete match function for rule E1700 at 2025-07-29 18:58:33.118788.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E1702 at 2025-07-29 18:58:33.119790
2025-07-29 18:58:33 Complete match function for rule E1702 at 2025-07-29 18:58:33.119790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I1003 at 2025-07-29 18:58:33.119790
2025-07-29 18:58:33 Complete match function for rule I1003 at 2025-07-29 18:58:33.119790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule I1002 at 2025-07-29 18:58:33.119790
2025-07-29 18:58:33 Complete match function for rule I1002 at 2025-07-29 18:58:33.119790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E1004 at 2025-07-29 18:58:33.119790
2025-07-29 18:58:33 Complete match function for rule E1004 at 2025-07-29 18:58:33.119790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E1003 at 2025-07-29 18:58:33.119790
2025-07-29 18:58:33 Complete match function for rule E1003 at 2025-07-29 18:58:33.119790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E1002 at 2025-07-29 18:58:33.119790
2025-07-29 18:58:33 Complete match function for rule E1002 at 2025-07-29 18:58:33.119790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E1005 at 2025-07-29 18:58:33.119790
2025-07-29 18:58:33 Complete match function for rule E1005 at 2025-07-29 18:58:33.119790.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3039 at 2025-07-29 18:58:33.122792
2025-07-29 18:58:33 Complete match function for rule E3039 at 2025-07-29 18:58:33.122792.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3039 at 2025-07-29 18:58:33.123792
2025-07-29 18:58:33 Complete match function for rule E3039 at 2025-07-29 18:58:33.123792.  Ran in 0:00:00
2025-07-29 18:58:33 Starting match function for rule E3039 at 2025-07-29 18:58:33.124793
2025-07-29 18:58:33 Complete match function for rule E3039 at 2025-07-29 18:58:33.124793.  Ran in 0:00:00
[[W8001: Check if Conditions are Used] (Condition UseCustomHostedZone not used) matched 181, [W1001: Ref/GetAtt to resource that is available when conditions are applied] (GetAtt to resource 'CustomDomainHostedZone' that may not be available when condition 'UseRoute53' is False at Resources/SubdomainDelega
tionRecords/Properties/ResourceRecords) matched 1968, [E3001: Basic CloudFormation Resource Check] ({'Fn::And': [{'Condition': 'UseRoute53'}, {'Condition': 'UseCustomHostedZone'}]} is not of type 'string') matched 1962, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was depre
cated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1238, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on
'2025-11-01'. Please consider updating to 'nodejs22.x') matched 1293, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1309, [W253
1: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1327, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' wa
s deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1461, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and upd
ate on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1545, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1712
, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1737, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs1
6.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1791, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01'
and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 1970, [W2531: Check if EOL Lambda Function Runtimes are used] (Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-10-01' and update on '2025-11-01'. Please consider updating to 'nodejs22.x') matched 2080]
2025-07-29 18:58:33,168 | Telemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics
2025-07-29 18:58:33,284 | Telemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics
2025-07-29 18:58:33,285 | Sending Telemetry: {'metrics': [{'commandRun': {'requestId': '0a18a3b2-c6ac-427e-843d-897e688fc7c0', 'installationId': '48234a0b-0d5b-449b-a3aa-4c7d4b581f6c', 'sessionId': '5215cff6-93fb-4424-afbc-ac9bf08271cb', 'executionEnvironment': 'CLI', 'ci': False, 'pyversion': '3.12.6',
'samcliVersion': '1.142.1', 'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam validate', 'metricSpecificAttributes': {'projectType': 'CFN', 'gitOrigin': '5c9c53c121db2032ff2e77beae1bfedd6b0ad7719994e3fdd7c82f2c32496417', 'projectName':
'fea7d1b7460cb78c35c2426adc32208921827a62b07a4c5a57b8e1f278cdf151', 'initialCommit': 'f6c05f7eff6d82549f9459da71b6f14ad34456831f50fe57551f3ede86ef735f'}, 'duration': 4160, 'exitReason': 'LinterRuleMatchedException', 'exitCode': 1}}]}
2025-07-29 18:58:33,285 | Unable to find Click Context for getting session_id.
2025-07-29 18:58:33,287 | Sending Telemetry: {'metrics': [{'events': {'requestId': '124a311e-246f-4257-be43-349014b56659', 'installationId': '48234a0b-0d5b-449b-a3aa-4c7d4b581f6c', 'sessionId': '5215cff6-93fb-4424-afbc-ac9bf08271cb', 'executionEnvironment': 'CLI', 'ci': False, 'pyversion': '3.12.6',
'samcliVersion': '1.142.1', 'commandName': 'sam validate', 'metricSpecificAttributes': {'events': [{'event_name': 'SamConfigFileExtension', 'event_value': '.toml', 'thread_id': 'ca841ebc2a9a499ca1fe36dde9e0b277', 'time_stamp': '2025-07-30 01:58:28.995', 'exception_name': None}, {'event_name':
'SamConfigFileExtension', 'event_value': '.toml', 'thread_id': 'da56ccb2141340c4ac5df9e0951eb063', 'time_stamp': '2025-07-30 01:58:29.007', 'exception_name': None}, {'event_name': 'UsedFeature', 'event_value': 'CFNLint', 'thread_id': '5bd4b1f1e1264193b31e19f3088c6d9b', 'time_stamp': '2025-07-30
01:58:31.462', 'exception_name': None}]}}}]}
2025-07-29 18:58:33,434 | Telemetry response: 200
2025-07-29 18:58:33,436 | Telemetry response: 200
Error: Linting failed. At least one linting rule was matched to the provided template.
(api-portal-py3.12) PS C:\Users\samue\projects\api-portal>