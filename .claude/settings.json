{
  "permissions": {
    "allow": [
      "Bash(poetry add:*)",
      "Bash(poetry remove:*)",
      "Bash(poetry publish:*)",
      "Bash(poetry version:*)",
      "Bash(poetry install:*)",
      "Bash(poetry show:*)",
      "Bash(pip-audit:*)",
      "Bash(pytest:*)",
      "Bash(ruff:*)",
      "Bash(mypy:*)",
      "Bash(make:*)",
      "Bash(git:*)",
      "Bash(gh:*)",
      "Bash(sam:*)",
      "Bash(aws:*)",
      "Bash(npm:*)",
      "Bash(node:*)"
    ],
    "deny": [
      "Bash(*poetry lock*)",
      "Bash(*rm -rf /*)"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash(*git commit*)",
        "hooks": [
          {
            "type": "command",
            "command": "grep -q 'git commit' && echo '\ud83d\udd0d Running pre-commit checks...' && pre-commit run --all-files && echo '\u2705 Pre-commit checks passed!' || echo '\u26a0\ufe0f Pre-commit checks failed but continuing...'"
          },
          {
            "type": "command",
            "command": "grep -q 'git commit' && echo '\ud83d\udd0d Running quality checks...' && make quality && echo '\u2705 Quality checks passed!' || echo '\u26a0\ufe0f Quality checks failed ...' || exit 1"
          },
          {
            "type": "command",
            "command": "grep -q 'gh pr create.*--base main' && echo '\ud83d\udea8 BLOCKED: Direct PRs to main not allowed in this project!' >&2 && echo '\ud83d\udccb GitOps Workflow: feature \u2192 dev \u2192 main' >&2 && echo '\u2705 Use: gh pr create --base dev' >&2 && echo '' >&2 && exit 2 || exit 0"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "grep -E 'poetry (add|remove)' && grep -q 'exit_code\":0' && echo && echo \"Please run 'poetry lock' in Windows to update your lock file\" || exit 0"
          }
        ]
      }
    ]
  },
  "env": {
    "DOCKER_BUILDKIT": "1",
    "COMPOSE_DOCKER_CLI_BUILD": "1",
    "PYTHONUNBUFFERED": "1"
  }
}
